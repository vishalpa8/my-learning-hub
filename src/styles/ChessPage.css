/* c:\Users\satya.pandey\OneDrive - Qualitest Group\Desktop\My Studies\my-learning-hub\src\styles\ChessPage.css */
/* =========================
 CHESS MODULE STYLES
 ========================= */

/* IMPORTANT: This file is designed to work WITH a global index.css file.
   It assumes that index.css defines foundational CSS Custom Properties (variables)
   for colors (e.g., --primary-color, --glass-bg, --text-muted-color),
   typography (e.g., --font-size-base, --font-weight-bold),
   spacing (e.g., --spacing-sm, --spacing-lg, --container-max-width),
   borders/radius (e.g., --border-radius, --border-color),
   shadows (e.g., --box-shadow, --shadow-elevate),
   transitions (e.g., --transition-all, --transition-fast, --easing-cubic),
   and base styles for elements like h1, h2, buttons, a generic '.card' class, and progress.
   If these are missing or different in your index.css, this module may not appear as intended.
   TO MINIMIZE REDUNDANCY: Wherever possible, apply global classes from index.css
   (e.g., .card, .btn-primary) directly to your HTML elements. This chess module CSS
   should primarily style components unique to the chess feature or provide specific
   variations if global classes are not sufficient or applicable.
*/

/* --- Common layout for flex/grid children and responsive containers --- */
/* Ensures chess components don't overflow their containers by default. */
.elo-stage-section,
.playlist-card,
.video-list-modal,
.playlist-item,
.badge-item,
.chess-hero,
.chess-hero-nugget,
.chess-hero-actions,
.progress-section-tile,
.badges-grid,
.badges-scroll,
.chess-dashboard-grid,
.elo-stage-section .playlists-grid,
.video-list-modal .video-list,
.video-list-modal .video-list-item,
.chess-hero-stats > div {
  min-width: 0;
  max-width: 100%;
}

/* --- Main containers specific to chess module --- */
/* These classes are for top-level layout within the chess module. */
.chess-page-container,
/* The .main-container-reset classes below are illustrative examples.
   Use them if a chess-specific container needs to override global margins,
   but generally, rely on global spacing or specific component margins. */
.elo-stage-section .main-container-reset,
.playlist-card .main-container-reset,
.video-list-modal .main-container-reset {
  width: 100%;
  margin-inline-start: auto; /* Centers the container. */
  margin-inline-end: auto; /* Centers the container. */
}

/* =========================
 DASHBOARD & CONTAINER
 ========================= */

.chess-dashboard-grid {
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(300px, 1fr)
  ); /* Responsive grid columns. */
  gap: var(--spacing-lg); /* Using global spacing from index.css. */
  container-type: inline-size; /* Enables Container Queries for children. */
  container-name: dashboard-grid; /* Naming the container for query targeting. */
}

.chess-page-container {
  max-width: var(
    --container-max-width
  ); /* Using global max-width from index.css. */
  margin-block-start: var(
    --spacing-lg
  ); /* Vertical margin using global spacing & logical properties. */
  margin-block-end: var(--spacing-lg);
  margin-inline: auto; /* Horizontal centering. */
  padding: var(--spacing-lg); /* Using global spacing from index.css. */
  background-color: var(
    --background-color
  ); /* Using global background from index.css. */
  border-radius: var(
    --border-radius-lg
  ); /* Using global radius from index.css. */
  box-shadow: var(--box-shadow); /* Using global shadow from index.css. */
  overflow-x: hidden; /* Prevents horizontal scrolling. Be cautious if content might legitimately overflow. */
}

/* =========================
 HERO SECTION
 ========================= */

.chess-hero {
  /* This is a unique, prominent component, not a standard .card. */
  display: flex;
  flex-direction: column;
  align-items: stretch; /* Child elements will stretch to fill the width. */
  gap: var(--spacing-lg); /* Spacing between direct children. */
  margin-bottom: var(
    --spacing-xl,
    /* Use larger spacing if defined, fallback to lg */ var(--spacing-lg)
  );
  background: var(
    --background-color
  ); /* Changed from --glass-bg for a solid look */
  box-shadow: var(--shadow-elevate); /* Using global shadow from index.css. */
  border-radius: var(--border-radius-lg);
  border: 1px solid var(--border-color-soft, #e3eaf5); /* Added border for solid look */
  padding: var(--spacing-lg);
  width: 100%; /* Ensures it takes full width of its container */
}

.chess-hero-info h1 {
  font-size: var(
    --font-size-xxl
  ); /* Using largest global heading size from index.css. */
  font-weight: var(--font-weight-bold);
  margin-bottom: var(--spacing-md);
  color: var(--primary-color-dark); /* Darker primary for better contrast */
  white-space: normal; /* Ensure text wraps. */
  overflow-wrap: break-word; /* Allow long words to break and wrap. */
}

.chess-hero-stats {
  display: flex;
  gap: var(--spacing-lg); /* Spacing between stat items. */
  margin-bottom: var(--spacing-md);
  justify-content: flex-start; /* Aligns stat items to the start. */
  flex-wrap: wrap; /* Allows stat items to wrap to the next line on smaller screens. */
}

.chess-hero-stats > div {
  /* Individual stat item container. */
  display: flex;
  flex-direction: column;
  min-width: 90px; /* Minimum width for each stat item. */
  flex: 1 1 90px; /* Allows items to grow and shrink, with a base size. */
  padding-block: var(
    --spacing-xs
  ); /* Vertical padding using logical properties. */
  padding-inline: var(
    --spacing-md
  ); /* Horizontal padding using logical properties. */
  background: var(
    --primary-color-xlight
  ); /* Using global color from index.css. */
  border-radius: var(--border-radius);
  margin-bottom: var(
    --spacing-xs
  ); /* Space below each stat item if they wrap. */
  text-align: center;
  box-shadow: var(--box-shadow-sm); /* Added subtle shadow from index.css. */
}

.chess-hero-stats .stat-label {
  font-size: var(--font-size-sm); /* Using global font size from index.css. */
  color: var(--text-muted-color); /* Using global color from index.css. */
  text-align: center;
  margin-bottom: var(--spacing-xxxs, 0.125rem); /* Using new spacing variable */
  font-weight: var(--font-weight-semibold);
  letter-spacing: 0.01em;
  white-space: nowrap; /* Prevents the label from wrapping. */
}

.chess-hero-stats .stat-value {
  font-size: var(
    --font-size-lg
  ); /* Using global font-size-lg from index.css. */
  font-weight: var(--font-weight-bold);
  color: var(--primary-color-dark); /* Using global color from index.css. */
  text-align: center;
  overflow-wrap: break-word; /* Prefer break-word for natural breaks. */
}

.chess-hero-actions {
  display: flex;
  gap: var(--spacing-md); /* Spacing between action buttons. */
  flex-wrap: wrap; /* Allows buttons to wrap. */
  justify-content: flex-start; /* Aligns buttons to the start. */
  align-items: center; /* Vertically aligns items if they have different heights. */
  margin-bottom: var(--spacing-md);
}

.chess-hero-nugget {
  /* A small piece of distinct information within the hero. */
  margin-top: var(--spacing-md);
}

.chess-hero-progress {
  /* Container for a progress bar within the hero section. */
  width: 100%;
  max-width: 500px; /* Limits the width of the progress bar. */
  margin-inline: auto; /* Centers the progress bar container. */
  padding-block: var(--spacing-sm); /* Vertical padding. */
  padding-inline: 0; /* No horizontal padding for the container itself. */
}

/* =========================
 PROGRESS BARS
 ========================= */

.progress-bar-label {
  /* Label associated with a progress bar in the chess module. */
  display: block;
  width: 100%;
  font-size: var(--font-size-sm);
  color: var(--text-muted-color); /* Using global color from index.css. */
  margin-bottom: var(--spacing-xxs, 0.25rem); /* Using new spacing variable */
  overflow-wrap: break-word;
}

/* =========================
 SECTION TILES & CARDS (Chess Specific)
 ========================= */

/*
  IMPORTANT: For .progress-section-tile and .elo-stage-section:
  It is STRONGLY RECOMMENDED to add the global .card and .card--flex-column classes
  from index.css to these elements in your HTML markup
  (e.g., <div class="card card--flex-column progress-section-tile">).
  This will apply base card styling and allow internal footers to align to the bottom.
  The styles below are minimal, assuming .card and .card--flex-column are used.
*/
.progress-section-tile,
.elo-stage-section {
  /* Assuming .card and .card--flex-column classes are applied in HTML for base styling. */
  /* Add any specific overrides or additional styles for these elements here if needed. */
  margin-bottom: var(
    --spacing-lg
  ); /* Retain specific margin if needed for layout, or rely on .card's margin. */
}

/* Styling for a common footer/action area within cards that use .card--flex-column */
.card-action-footer {
  margin-top: auto; /* Pushes this element to the bottom of the flex column card */
  padding-top: var(--spacing-md); /* Space above the footer content */
  border-top: 1px solid var(--border-color-light, #f1f3f5); /* Optional separator line */
  width: 100%; /* Make footer take full width */
  display: flex; /* Allows for button alignment within the footer */
  justify-content: flex-end; /* Example: aligns buttons to the right */
  gap: var(--spacing-sm); /* Space between items in the footer */
}

.elo-stage-header {
  /* Header for an ELO stage section. */
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* Aligns header content to the left. */
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
  width: 100%;
}

.elo-stage-header h2 {
  /* Assumes h2 base styles from index.css. */
  color: var(--primary-color-dark); /* Darker primary for better contrast */
  margin: 0; /* Resets default h2 margin. */
  display: flex;
  align-items: center; /* Vertically aligns icon/text if present. */
  gap: var(--spacing-sm);
  flex-wrap: wrap; /* Allow content to wrap if needed. */
  white-space: normal; /* Ensure text wraps. */
  overflow-wrap: break-word; /* Allows long words to break and wrap, preventing truncation. */
}

.elo-range-label {
  /* Label indicating an ELO range. */
  font-size: var(--font-size-sm);
  color: var(--text-muted-color);
  font-weight: var(--font-weight-semibold);
  margin-inline-start: var(
    --spacing-sm
  ); /* Space to the left of the label (LTR). */
  background: var(--primary-color-xlight);
  padding: 0.15em 0.7em; /* Small padding around the label text. */
  border-radius: var(--border-radius-pill); /* Pill-shaped radius. */
}

.elo-stage-section .playlists-grid {
  /* Grid container for playlists within an ELO stage. */
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(260px, 1fr)
  ); /* Responsive grid. */
  gap: var(--spacing-lg);
  container-type: inline-size; /* Enables Container Queries for child .playlist-card elements. */
  container-name: playlists-grid; /* Naming the container. */
}

.playlist-card {
  /* This component has a distinct structure but shares visual characteristics with .card from index.css.
     It should use class="card playlist-card" in HTML to inherit base .card styles. */
  background: var(--background-color); /* Solid background */
  border-radius: var(--border-radius-lg);
  box-shadow: var(
    --box-shadow
  ); /* Using standard card shadow for consistency */
  border: 1px solid var(--border-color-soft, #e3eaf5);
  padding: var(--spacing-lg);
  display: flex;
  flex-direction: column; /* Stacks card content vertically. */
  gap: var(--spacing-md); /* Space between direct children of the card. */
  align-items: flex-start; /* Aligns children to the start (left). */
  margin-bottom: 0; /* Specific to this component layout, overrides potential inherited margin. */
  transition: var(
    --transition-all
  ); /* Using global transition from index.css. */
  position: relative; /* For z-index or potential absolute positioning of children. */
  z-index: 1; /* Ensures proper stacking for hover effects if needed. */
  animation: fadeInCard 0.7s var(--easing-cubic); /* Using global animation from index.css. */
}
.playlist-card:hover {
  background: var(--light-bg-color, #f9f9f9);
  box-shadow: var(
    --box-shadow-lg
  ); /* Enhanced shadow on hover, consistent with global .card:hover */
  border-color: var(--primary-color);
  transform: translateY(-2px); /* Subtle lift effect */
}

.playlist-card .playlist-meta {
  /* Meta information for a playlist. */
  font-size: var(--font-size-sm);
  color: var(--text-muted-color);
  margin-bottom: var(--spacing-xs);
  overflow-wrap: break-word;
}

.playlist-card h3 {
  /* Assumes h3 base styles from index.css. */
  margin: 0 0 var(--spacing-xs) 0; /* Margin below the title. */
  color: var(
    --primary-color-dark
  ); /* Darker primary for better contrast on light card */
  white-space: normal; /* Ensure text wraps. */
  overflow-wrap: break-word; /* Allow long words to break and wrap. */
}

/* Buttons within playlist cards - styled distinctively for the chess module. */
.playlist-card .btn-view-videos {
  /* Specific class name for these buttons. Should use class="btn-primary btn-view-videos" in HTML */
  margin-top: auto; /* Pushes button to the bottom of the card flex container. */
  align-self: stretch; /* Makes button take full width of its alignment container. */
  font-weight: var(--font-weight-semibold); /* Global font weight. */
  border-radius: var(--border-radius); /* Global radius from index.css. */
  padding: 0.6em 1.3em; /* Custom padding for this button type. */
  background: var(--primary-color);
  color: var(
    --light-color,
    #fff
  ); /* Standard white text for primary buttons. */
  border: none; /* These buttons were borderless in the original chess CSS. */
  box-shadow: var(--box-shadow-sm); /* Global small shadow from index.css. */
  text-align: center;
  transition: background-color var(--transition-fast),
    transform var(--transition-fast), box-shadow var(--transition-base); /* Transitions from index.css. */
  overflow-wrap: break-word; /* For button text wrapping if necessary. */
}

.playlist-card .btn-view-videos:hover,
.playlist-card .btn-view-videos:focus-visible {
  background: var(--primary-color-dark);
  color: var(--light-color, #fff);
  transform: translateY(-1px) scale(1.02); /* Subtle hover/focus transform. */
  box-shadow: var(
    --box-shadow
  ); /* Slightly larger shadow on hover from index.css. */
  outline: none; /* Custom focus defined below, removing default browser outline. */
}
.playlist-card .btn-view-videos:focus-visible {
  outline: 2px solid var(--primary-color); /* Standardized outline */
  outline-offset: 2px;
}
.playlist-card .btn-view-videos:disabled {
  background-color: var(--text-muted-color);
  color: rgba(
    var(--light-color-rgb, 255, 255, 255),
    0.7
  ); /* Use RGB var if available */
  cursor: not-allowed;
  transform: none;
  box-shadow: var(--box-shadow-sm);
  outline: none;
}

/* Container Queries for Playlist Cards: Adjusts styles based on the width of .playlists-grid. */
@container playlists-grid (max-width: 300px) {
  .playlist-card {
    padding: var(--spacing-md); /* Reduce padding in very narrow containers. */
  }
  .playlist-card h3 {
    font-size: var(
      --font-size-base
    ); /* Use global base font size from index.css. */
  }
  .playlist-card .btn-view-videos {
    padding: 0.5em 1em; /* Smaller padding for the button. */
    font-size: var(--font-size-sm); /* Smaller font size for the button. */
  }
}

/* =========================
 PLAYLISTS GRID & ITEMS (Typically for items within a modal list)
 ========================= */

.playlist-item {
  /* Individual item within a playlist, often used in a modal list. */
  background: var(--background-color); /* Solid background */
  border-radius: var(--border-radius-lg);
  box-shadow: var(--box-shadow); /* Standard card shadow */
  border: 1px solid var(--border-color-soft, #e3eaf5); /* Softer border */
  transition: var(--transition-all);
  margin-bottom: var(--spacing-md);
  padding: var(--spacing-md);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}
.playlist-item:hover {
  background: var(--light-bg-color, #f9f9f9);
  box-shadow: var(--box-shadow-lg);
  border-color: var(--primary-color);
  transform: translateY(-2px);
}

.video-list-modal .video-list-item {
  /* An item in a list of videos, typically within a modal. */
  display: flex;
  align-items: flex-start; /* Aligns items (e.g., icon and text) to the top. */
  gap: var(--spacing-sm); /* Space between elements within the list item. */
  padding-block: var(
    --spacing-xs
  ); /* Vertical padding using logical properties. */
  padding-inline: 0; /* No horizontal padding for the list item itself; content inside can have padding. */
  border-bottom: 1px solid var(--border-color-light, #f1f3f5); /* Lighter border for subtle separation */
  font-size: var(--font-size-base); /* Global base font size. */
  width: 100%;
  flex-wrap: nowrap; /* Default, overridden in media query below for small screens. */
}
@media (max-width: 400px) {
  /* Specific breakpoint for very small screens. */
  .video-list-modal .video-list-item {
    flex-wrap: wrap; /* Allow items (e.g., title and toggle button) to wrap. */
  }
  .video-list-modal .video-toggle {
    margin-top: var(
      --spacing-xs
    ); /* Adjust spacing when it wraps below the title. */
  }
}
.video-list-modal .video-title {
  flex: 1 1 0; /* Allow title to grow and shrink to take available space. */
  display: block; /* Ensures it behaves like a block for wrapping and layout. */
  color: var(--text-color-secondary, #555); /* Slightly muted for list items */
  white-space: normal; /* Ensure title text wraps naturally. */
  overflow-wrap: break-word; /* Allow long words to break and wrap, preventing truncation. */
}

.video-list-modal .video-toggle {
  flex-shrink: 0;
  /* Styling as a minimal, icon-like button */
  background: transparent;
  border: none;
  padding: var(--spacing-xxs, 0.25rem); /* Use new spacing variable */
  color: var(--primary-color-dark); /* Darker for better visibility */
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius-sm);
  transition: background-color var(--transition-fast),
    color var(--transition-fast);
}

.video-list-modal .video-toggle:hover,
.video-list-modal .video-toggle:focus-visible {
  background-color: var(--primary-color-xlight, #e7f3ff);
  color: var(--primary-color); /* Brighter on hover */
}

.video-list-modal-content {
  overflow-wrap: break-word;
  white-space: normal;
  padding: var(--spacing-md);
  margin-block: var(var(--spacing-md));
  background-color: var(
    --background-color-subtle,
    #eaf1fb
  ); /* More subtle background */
  border-radius: var(--border-radius);
  border: 1px solid var(--border-color-light);
}

.video-list-modal-content > *:not(:last-child) {
  margin-bottom: var(--spacing-sm);
}

.video-list-modal-content p,
.video-list-modal-content li {
  color: var(--text-color-secondary);
  line-height: var(--line-height-base);
  font-size: var(--font-size-base);
  white-space: normal;
  overflow-wrap: break-word;
}
.video-list-modal-content ul,
.video-list-modal-content ol {
  padding-inline-start: var(--spacing-md);
  margin-block-start: var(--spacing-xs);
  margin-block-end: var(--spacing-xs);
}
.video-list-modal-content strong {
  font-weight: var(--font-weight-semibold);
  color: var(--text-color);
}

.video-list-modal-content * {
  min-width: 0;
}

/* =========================
 BADGES (Chess Specific)
 ========================= */

.badges-scroll {
  display: flex;
  gap: var(--spacing-md);
  overflow-x: auto;
  padding-bottom: var(--spacing-sm);
  margin-bottom: var(--spacing-sm);
}

.badges-grid {
  display: flex;
  flex-wrap: nowrap;
  gap: var(--spacing-xs);
}

.badge-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: var(--light-bg-color);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow-sm); /* Consistent small shadow */
  padding: 0.5em 1em;
  font-size: var(--font-size-sm);
  color: var(--text-color-secondary);
  transition: var(--transition-all);
  cursor: pointer;
  text-align: center;
  white-space: nowrap;
  border: 1px solid var(--border-color-soft, #e3eaf5); /* Softer border */
}

.badge-item:hover,
.badge-item:focus-visible {
  background: var(--primary-color-xlight);
  box-shadow: var(--box-shadow-md); /* Slightly more pronounced shadow */
  border-color: var(--primary-color);
  color: var(--primary-color-dark);
  outline: none;
}
.badge-item:focus-visible {
  outline: 2px solid var(--primary-color); /* Standardized outline */
  outline-offset: 2px; /* Consistent offset */
}

/* =========================
 BUTTONS & FOCUS (Chess Specific Actions)
 ========================= */
/*
  IMPORTANT: For .chess-hero-actions .btn-action:
  It is STRONGLY RECOMMENDED to add the global .btn-primary class from index.css
  to these button elements in your HTML markup (e.g., <button class="btn-primary btn-action">).
  This will apply base button styling and significantly reduce CSS redundancy.
  The styles below are minimal, assuming .btn-primary is used.
  If you CANNOT modify HTML, you would uncomment and use the more extensive styles
  that replicate .btn-primary behavior.
*/
.chess-hero-actions .btn-action {
  /* Assuming .btn-primary class is applied in HTML for base styling. */
  /* Add any specific overrides or additional styles for these buttons here if needed. */
  /* For example, if they need a specific width or margin not covered by .btn-primary */
}

/* =========================
 MODAL OVERLAY (Chess Specific Modal - e.g., Video List)
 ========================= */

.video-list-modal-overlay {
  position: fixed;
  inset: 0;
  background: rgba(var(--dark-color-rgb), 0.45);
  z-index: 999; /* Ensure modal is on top */
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: auto; /* Allow scrolling if modal content is too tall */
  padding: var(--spacing-md);
  transition: background var(--transition-fast);
  /* Ensure overlay fades in smoothly */
  opacity: 0;
  animation: modalOverlayFadeIn 0.3s var(--easing-cubic) forwards;
}

.video-list-modal {
  background: var(--background-color);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-elevate);
  padding: var(--spacing-lg);
  max-height: 90vh;
  overflow-y: auto;
  width: 100%;
  max-width: 700px;
  /* Ensure modal content animates in smoothly */
  opacity: 0;
  transform: translateY(20px);
  animation: modalContentFadeIn 0.4s 0.1s var(--easing-cubic) forwards;
}

@keyframes modalOverlayFadeIn {
  to {
    opacity: 1;
  }
}
@keyframes modalContentFadeIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.video-list-modal h2 {
  min-width: 0;
  margin-top: 0;
  margin-bottom: var(--spacing-lg);
  color: var(--primary-color-dark); /* Darker for modal title */
  white-space: normal;
  overflow-wrap: break-word;
}
.video-list-modal .btn-close-modal {
  position: absolute;
  top: var(--spacing-md);
  right: var(--spacing-md);
  background: transparent;
  border: none; /* Ensure no default button border */
  color: var(--text-muted-color);
  font-size: var(--font-size-xl);
  padding: var(--spacing-xs);
  line-height: 1;
  cursor: pointer;
  transition: color var(--transition-fast);
}
.video-list-modal .btn-close-modal:hover,
.video-list-modal .btn-close-modal:focus-visible {
  color: var(--primary-color);
  background-color: var(
    --primary-color-xlight,
    #e7f3ff
  ); /* Subtle background on hover */
}

/* =========================
 RESPONSIVE DESIGN (Chess Module Specifics)
 ========================= */

@media (max-width: 900px) {
  .chess-page-container {
    padding: var(--spacing-md);
  }
  .elo-stage-section, /* Assuming .card is applied in HTML */
  .progress-section-tile {
    /* Assuming .card is applied in HTML */
    padding: var(--spacing-md); /* Override global .card padding if needed */
  }
  .elo-stage-section .playlists-grid {
    grid-template-columns: 1fr;
    gap: var(--spacing-md);
  }
  .playlist-card {
    padding: var(--spacing-md);
  }
}

@media (max-width: 700px) {
  .chess-hero {
    padding: var(--spacing-md);
    margin-bottom: var(--spacing-lg);
  }
  .chess-hero-stats {
    flex-direction: column;
    gap: var(--spacing-md);
    align-items: stretch;
  }
  .chess-hero-stats > div {
    align-items: flex-start;
    padding-block: var(--spacing-xs);
    padding-inline: var(--spacing-sm);
    text-align: start;
  }
  .chess-hero-stats .stat-label,
  .chess-hero-stats .stat-value {
    text-align: start;
  }
  .chess-hero-actions {
    flex-direction: column;
    gap: var(--spacing-sm);
    align-items: stretch;
  }
  .chess-hero-actions .btn-action {
    /* Assuming .btn-primary is applied in HTML */
    width: 100%;
  }
}

@media (max-width: 600px) {
  .video-list-modal {
    padding: var(--spacing-md);
  }
  .elo-stage-section, /* Assuming .card is applied in HTML */
  .progress-section-tile, /* Assuming .card is applied in HTML */
  .playlist-card {
    padding: var(
      --spacing-md
    ); /* Consistent reduced padding for these card-like elements. */
  }
}

/* =========================
 END OF CHESS MODULE CSS
 ========================= */
