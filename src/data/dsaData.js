import { preprocessDsaData } from "../utils/dsaUtils";

const rawDsaData = [
  {
    id: "gfg_binary-indexed-tree-or-fenwick-tree-2",
    title: "Fenwick Tree (Binary Indexed Tree)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Fenwick Tree Implementation",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/binary-indexed-tree-or-fenwick-tree-2/",
    explanationLink:
      "https://www.geeksforgeeks.org/binary-indexed-tree-or-fenwick-tree-2/",
    isLastMoment: true,
    pattern: "Fenwick Tree",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_kmp-algorithm-for-pattern-searching-set-1-introduction-and-a",
    title: "KMP Algorithm (Pattern Searching)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "String Algorithms",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/kmp-algorithm-for-pattern-searching-set-1-introduction-and-algorithm/",
    explanationLink:
      "https://www.geeksforgeeks.org/kmp-algorithm-for-pattern-searching-set-1-introduction-and-algorithm/",
    isLastMoment: true,
    pattern: "KMP Algorithm",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_lowest-common-ancestor-binary-tree-set-1-introduction-ancest",
    title: "Lowest Common Ancestor of a Binary Tree (GFG)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "LCA (Binary Lifting / Tarjan's Offline)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/lowest-common-ancestor-binary-tree-set-1-introduction-ancestor-array-method/",
    explanationLink:
      "https://www.geeksforgeeks.org/lowest-common-ancestor-binary-tree-set-1-introduction-ancestor-array-method/",
    isLastMoment: true,
    pattern: "LCA",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_segment-tree-set-1-sum-of-given-range",
    title: "Segment Tree (Implementation - Range Sum/Min/Max Query)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Segment Tree",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/segment-tree-set-1-sum-of-given-range/",
    explanationLink:
      "https://www.geeksforgeeks.org/segment-tree-set-1-sum-of-given-range/",
    isLastMoment: true,
    pattern: "Segment Tree",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1694",
    title: "Maximum Flow",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Max Flow",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1694",
    explanationLink: "https://usaco.guide/problems/cses-1694",
    isLastMoment: true,
    pattern: "Max Flow",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1695",
    title: "Police Chase",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Max Flow",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1695",
    explanationLink:
      "https://usaco.guide/problems/cses-1695-police-chase/solution",
    isLastMoment: false,
    pattern: "Max Flow",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1700",
    title: "Tree Traversals",
    topic: "Trees",
    subTopic: "Tree Reconstruction",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1700",
    explanationLink:
      "https://usaco.guide/problems/cses-1700-tree-traversals/solution",
    isLastMoment: false,
    pattern: "Recursion / Tree Traversal",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1755",
    title: "Longest Palindrome (using Manacher or Suffix Array/Tree)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Longest Palindrome",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1755",
    explanationLink: "https://usaco.guide/problems/cses-1755",
    isLastMoment: true,
    pattern: "Longest Palindrome",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_count-distinct-substrings-using-suffix-array",
    title: "All Substrings (Suffix Array/Tree)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "All Substrings",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/count-distinct-substrings-using-suffix-array/",
    explanationLink:
      "https://www.geeksforgeeks.org/count-distinct-substrings-using-suffix-array/",
    isLastMoment: false,
    pattern: "All Substrings",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_heavy-light-decomposition",
    title: "Heavy-Light Decomposition (Tree Algorithm)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Heavy-Light Decomposition",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/heavy-light-decomposition/",
    explanationLink: "https://www.geeksforgeeks.org/heavy-light-decomposition/",
    isLastMoment: false,
    pattern: "Heavy-Light Decomposition",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_introduction-to-game-theory",
    title:
      "Game Theory (MEX, Grundy numbers) - Covered in Math/NT, reinforce here.",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Game Theory",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/introduction-to-game-theory/",
    explanationLink:
      "https://www.geeksforgeeks.org/introduction-to-game-theory/",
    isLastMoment: false,
    pattern: "Game Theory / MEX / Grundy Numbers",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_link-cut-tree-introduction-and-applications",
    title: "Link-Cut Tree (Advanced Tree DS)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Link-Cut Tree",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/link-cut-tree-introduction-and-applications/",
    explanationLink:
      "https://www.geeksforgeeks.org/link-cut-tree-introduction-and-applications/",
    isLastMoment: false,
    pattern: "Link-Cut Tree",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_matpow-recursive-solution-for-matrix-exponentiation",
    title: "Matrix Exponentiation",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Linear Recurrences / DP Optimization",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/matpow-recursive-solution-for-matrix-exponentiation/",
    explanationLink:
      "https://www.geeksforgeeks.org/matpow-recursive-solution-for-matrix-exponentiation/",
    isLastMoment: true,
    pattern: "Matrix Exponentiation",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_maximum-bipartite-matching",
    title: "Bipartite Matching",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Max Flow / Augmenting Paths (Hopcroft-Karp)",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/maximum-bipartite-matching/",
    explanationLink:
      "https://www.geeksforgeeks.org/maximum-bipartite-matching/",
    isLastMoment: true,
    pattern: "Bipartite Matching",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_meet-in-the-middle",
    title: "Meet-in-the-Middle",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Optimization Technique for Exponential Problems",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/meet-in-the-middle/",
    explanationLink: "https://www.geeksforgeeks.org/meet-in-the-middle/",
    isLastMoment: true,
    pattern: "Meet-in-the-Middle",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_pattern-searching-using-suffix-array",
    title: "Pattern Positions (Suffix Array/Tree)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Pattern Positions",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/pattern-searching-using-suffix-array/",
    explanationLink:
      "https://www.geeksforgeeks.org/pattern-searching-using-suffix-array/",
    isLastMoment: false,
    pattern: "Pattern Positions",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_persistent-segment-tree-set-1-introduction",
    title: "Persistent Segment Tree (Advanced Segment Tree variation)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Persistent Segment Tree",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/persistent-segment-tree-set-1-introduction/",
    explanationLink:
      "https://www.geeksforgeeks.org/persistent-segment-tree-set-1-introduction/",
    isLastMoment: false,
    pattern: "Persistent Segment Tree",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_rabin-karp-algorithm-for-pattern-searching",
    title: "String Algorithms (Rabin-Karp - Pattern Searching)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "String Algorithms",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/rabin-karp-algorithm-for-pattern-searching/",
    explanationLink:
      "https://www.geeksforgeeks.org/rabin-karp-algorithm-for-pattern-searching/",
    isLastMoment: false,
    pattern: "String Algorithms",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver CP Sheet",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_suffix-array-set-1-introduction",
    title: "Suffix Array / Suffix Tree (Construction and problems)",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Suffix Array / Suffix Tree",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/suffix-array-set-1-introduction/",
    explanationLink:
      "https://www.geeksforgeeks.org/suffix-array-set-1-introduction/",
    isLastMoment: false,
    pattern: "Suffix Array / Suffix Tree",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_sweep-line-algorithm",
    title: "Sweep Line Algorithm",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Geometric / Interval Problems",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/sweep-line-algorithm/",
    explanationLink: "https://www.geeksforgeeks.org/sweep-line-algorithm/",
    isLastMoment: true,
    pattern: "Sweep Line Algorithm",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_23",
    title: "Merge K Sorted Lists",
    topic: "Advanced Data Structures & Algorithms",
    subTopic: "Heap Application",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/merge-k-sorted-lists/",
    explanationLink: "https://neetcode.io/solutions/merge-k-sorted-lists",
    isLastMoment: true,
    pattern: "Min-Heap",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1",
    title: "Two Sum",
    topic: "Arrays",
    subTopic: "Hash Map",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/two-sum/",
    explanationLink: "https://neetcode.io/solutions/two-sum",
    isLastMoment: true,
    pattern: "Hash Map",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_118",
    title: "Pascal's Triangle",
    topic: "Dynamic Programming",
    subTopic: "Dynamic Programming / Combinatorics",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/pascals-triangle/",
    explanationLink: "https://www.geeksforgeeks.org/pascals-triangle/",
    isLastMoment: false,
    pattern: "Dynamic Programming / Math",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_121",
    title: "Best Time to Buy and Sell Stock",
    topic: "Greedy",
    subTopic: "Greedy / Kadane's Variation",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
    explanationLink:
      "https://neetcode.io/solutions/best-time-to-buy-and-sell-stock",
    isLastMoment: true,
    pattern: "Greedy / Kadane's Variation",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_136",
    title: "Single Number",
    topic: "Bit Manipulation",
    subTopic: "XOR",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/single-number/",
    explanationLink: "https://neetcode.io/solutions/single-number",
    isLastMoment: true,
    pattern: "XOR",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_169",
    title: "Majority Element",
    topic: "Arrays",
    subTopic: "Moore's Voting Algorithm",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/majority-element/",
    explanationLink: "https://neetcode.io/solutions/majority-element",
    isLastMoment: true,
    pattern: "Moore's Voting Algorithm",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_217",
    title: "Contains Duplicate",
    topic: "Arrays",
    subTopic: "Hash Set",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/contains-duplicate/",
    explanationLink: "https://neetcode.io/solutions/contains-duplicate",
    isLastMoment: true,
    pattern: "Hash Set",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_26",
    title: "Remove Duplicates from Sorted Array",
    topic: "Two Pointers",
    subTopic: "Two Pointers",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/remove-duplicates-from-sorted-array/",
    explanationLink:
      "https://www.geeksforgeeks.org/remove-duplicates-from-sorted-array/",
    isLastMoment: true,
    pattern: "Two Pointers",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_268",
    title: "Missing Number",
    topic: "Bit Manipulation",
    subTopic: "Sum / XOR / Cyclic Sort",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/missing-number/",
    explanationLink: "https://www.geeksforgeeks.org/find-the-missing-number/",
    isLastMoment: true,
    pattern: "Math / Bit Manipulation / Cyclic Sort",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_27",
    title: "Remove Element",
    topic: "Two Pointers",
    subTopic: "Two Pointers",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/remove-element/",
    explanationLink:
      "https://www.geeksforgeeks.org/remove-element-array-place-two-pointer-approach/",
    isLastMoment: true,
    pattern: "Two Pointers",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_283",
    title: "Move Zeroes",
    topic: "Two Pointers",
    subTopic: "Two Pointers",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/move-zeroes/",
    explanationLink:
      "https://www.geeksforgeeks.org/move-zeroes-to-end-of-array/",
    isLastMoment: true,
    pattern: "Two Pointers",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_485",
    title: "Max Consecutive Ones",
    topic: "Sliding Window",
    subTopic: "Sliding Window / Iteration",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/max-consecutive-ones/",
    explanationLink:
      "https://www.geeksforgeeks.org/maximum-consecutive-ones-or-zeros-in-a-binary-array/",
    isLastMoment: false,
    pattern: "Sliding Window / Array Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_53",
    title: "Maximum Subarray",
    topic: "Arrays",
    subTopic: "Kadane's Algorithm",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/maximum-subarray/",
    explanationLink: "https://neetcode.io/solutions/maximum-subarray",
    isLastMoment: true,
    pattern: "Kadane's Algorithm",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
      "NeetCode 150",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_66",
    title: "Plus One",
    topic: "Arrays",
    subTopic: "Array Manipulation",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/plus-one/",
    explanationLink:
      "https://www.geeksforgeeks.org/add-1-to-a-number-represented-as-an-array/",
    isLastMoment: true,
    pattern: "Array Manipulation",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_88",
    title: "Merge Sorted Array",
    topic: "Two Pointers",
    subTopic: "Two Pointers",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/merge-sorted-array/",
    explanationLink: "https://www.geeksforgeeks.org/merge-two-sorted-arrays/",
    isLastMoment: true,
    pattern: "Two Pointers",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "cses_1619",
    title: "Restaurant Customers",
    topic: "Arrays",
    subTopic: "Sweep Line / Sorting Events",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1619",
    explanationLink:
      "https://usaco.guide/problems/cses-1619-restaurant-customers/solution",
    isLastMoment: false,
    pattern: "Sweep Line / Sorting",
    sources: ["CSES Problem Set", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1661",
    title: "Subarray Sums II",
    topic: "Arrays",
    subTopic: "Prefix Sum + Hash Map",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1661",
    explanationLink:
      "https://usaco.guide/problems/cses-1661-subarray-sums-ii/solution",
    isLastMoment: true,
    pattern: "Prefix Sum / Hash Map",
    sources: [
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1662",
    title: "Subarray Divisibility",
    topic: "Arrays",
    subTopic: "Prefix Sum + Hash Map (Modulo Arithmetic)",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1662",
    explanationLink:
      "https://usaco.guide/problems/cses-1662-subarray-divisibility/solution",
    isLastMoment: false,
    pattern: "Prefix Sum / Hash Map / Modulo Arithmetic",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_find-a-repeating-and-a-missing-number",
    title: "Find a repeating and a missing number",
    topic: "Bit Manipulation",
    subTopic: "Math / Bit Manipulation / Hashing",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/find-a-repeating-and-a-missing-number/",
    explanationLink:
      "https://www.geeksforgeeks.org/find-a-repeating-and-a-missing-number/",
    isLastMoment: false,
    pattern: "Math / Bit Manipulation / Hashing",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_longest-sub-array-with-sum-k",
    title: "Find the longest subarray with sum K",
    topic: "Arrays",
    subTopic: "Prefix Sum / Hashing",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/longest-sub-array-with-sum-k/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Prefix Sum / Hash Map",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_11",
    title: "Container With Most Water",
    topic: "Two Pointers",
    subTopic: "Two Pointers",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/container-with-most-water/",
    explanationLink: "https://neetcode.io/solutions/container-with-most-water",
    isLastMoment: true,
    pattern: "Two Pointers",
    sources: ["Blind 75", "Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_128",
    title: "Longest Consecutive Sequence",
    topic: "Arrays",
    subTopic: "Hash Set",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/longest-consecutive-sequence/",
    explanationLink:
      "https://neetcode.io/solutions/longest-consecutive-sequence",
    isLastMoment: true,
    pattern: "Hash Set",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_1423",
    title: "Maximum Points You Can Obtain from Cards",
    topic: "Sliding Window",
    subTopic: "Sliding Window variation",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards/",
    explanationLink:
      "https://www.geeksforgeeks.org/maximum-points-you-can-obtain-from-cards/",
    isLastMoment: true,
    pattern: "Sliding Window variation",
    sources: ["GFG SDE Sheet", "Last Moment 79", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_15",
    title: "3Sum",
    topic: "Two Pointers",
    subTopic: "Two Pointers + Sorting",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/3sum/",
    explanationLink: "https://neetcode.io/solutions/3sum",
    isLastMoment: true,
    pattern: "Two Pointers / Sorting",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_153",
    title: "Find Minimum in Rotated Sorted Array",
    topic: "Binary Search",
    subTopic: "Binary Search",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",
    explanationLink:
      "https://neetcode.io/solutions/find-minimum-in-rotated-sorted-array",
    isLastMoment: true,
    pattern: "Binary Search",
    sources: ["Blind 75", "Last Moment 79", "NeetCode 150", "Striver A2Z"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_18",
    title: "4Sum",
    topic: "Two Pointers",
    subTopic: "Two Pointers + Sorting (Extension of 3Sum)",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/4sum/",
    explanationLink: "https://neetcode.io/solutions/4sum",
    isLastMoment: false,
    pattern: "Two Pointers / Sorting",
    sources: [
      "GFG SDE Sheet",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_229",
    title: "Majority Element II",
    topic: "Arrays",
    subTopic: "Moore's Voting Algorithm Variation / Hashing",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/majority-element-ii/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Moore's Voting Algorithm / Hashing",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_238",
    title: "Product of Array Except Self",
    topic: "Arrays",
    subTopic: "Prefix/Suffix Product Array",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/product-of-array-except-self/",
    explanationLink:
      "https://neetcode.io/solutions/product-of-array-except-self",
    isLastMoment: true,
    pattern: "Array Manipulation / Prefix Sum / Suffix Sum",
    sources: ["Blind 75", "Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_287",
    title: "Find the Duplicate Number",
    topic: "Arrays",
    subTopic: "Floyd's Cycle Detection",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/find-the-duplicate-number/",
    explanationLink: "https://neetcode.io/solutions/find-the-duplicate-number",
    isLastMoment: true,
    pattern: "Floyd's Cycle Detection / Hashing",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_31",
    title: "Next Permutation",
    topic: "Two Pointers",
    subTopic: "Permutations / Two Pointers",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/next-permutation/",
    explanationLink: "https://www.geeksforgeeks.org/next-permutation/",
    isLastMoment: false,
    pattern: "Array Manipulation / Two Pointers",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_33",
    title: "Search in Rotated Sorted Array",
    topic: "Binary Search",
    subTopic: "Binary Search",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/search-in-rotated-sorted-array/",
    explanationLink:
      "https://neetcode.io/solutions/search-in-rotated-sorted-array",
    isLastMoment: true,
    pattern: "Binary Search",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_45",
    title: "Jump Game II",
    topic: "Greedy",
    subTopic: "Greedy / BFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/jump-game-ii/",
    explanationLink: "https://neetcode.io/solutions/jump-game-ii",
    isLastMoment: true,
    pattern: "Greedy / BFS",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_48",
    title: "Rotate Image",
    topic: "Matrix",
    subTopic: "In-place Matrix Rotation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/rotate-image/",
    explanationLink: "https://neetcode.io/solutions/rotate-image",
    isLastMoment: true,
    pattern: "Matrix Manipulation",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_54",
    title: "Spiral Matrix",
    topic: "Matrix",
    subTopic: "Simulation / Matrix Traversal",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/spiral-matrix/",
    explanationLink: "https://neetcode.io/solutions/spiral-matrix",
    isLastMoment: true,
    pattern: "Matrix Traversal",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_540",
    title: "Single Element in a Sorted Array",
    topic: "Binary Search",
    subTopic: "Binary Search / XOR",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/single-element-in-a-sorted-array/",
    explanationLink:
      "https://www.geeksforgeeks.org/find-the-element-that-appears-once-in-a-sorted-array/",
    isLastMoment: false,
    pattern: "Binary Search / Bit Manipulation",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_55",
    title: "Jump Game",
    topic: "Dynamic Programming",
    subTopic: "Greedy / DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/jump-game/",
    explanationLink: "https://neetcode.io/solutions/jump-game",
    isLastMoment: true,
    pattern: "Greedy / Dynamic Programming",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Blind 75",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_56",
    title: "Merge Intervals",
    topic: "Matrix",
    subTopic: "Sorting, Interval Merging",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/merge-intervals/",
    explanationLink: "https://neetcode.io/solutions/merge-intervals",
    isLastMoment: true,
    pattern: "Intervals / Sorting",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_73",
    title: "Set Matrix Zeroes",
    topic: "Matrix",
    subTopic: "In-place Marking / Constant Space",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/set-matrix-zeroes/",
    explanationLink: "https://neetcode.io/solutions/set-matrix-zeroes",
    isLastMoment: true,
    pattern: "Matrix / In-place Marking",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_75",
    title: "Sort Colors",
    topic: "Two Pointers",
    subTopic: "Dutch National Flag Algorithm",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/sort-colors/",
    explanationLink: "https://neetcode.io/solutions/sort-colors",
    isLastMoment: true,
    pattern: "Dutch National Flag",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_84",
    title: "Largest Rectangle in Histogram",
    topic: "Stack",
    subTopic: "Stack",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/largest-rectangle-in-histogram/",
    explanationLink:
      "https://neetcode.io/solutions/largest-rectangle-in-histogram",
    isLastMoment: true,
    pattern: "Stack / Monotonic Stack",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_minimum-size-subarray-sum",
    title: "Minimum Size Subarray Sum",
    topic: "Sliding Window",
    subTopic: "Sliding Window",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/minimum-size-subarray-sum/",
    explanationLink: "https://neetcode.io/solutions/minimum-size-subarray-sum",
    isLastMoment: true,
    pattern: "Sliding Window",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_count-number-of-subarrays-with-given-xor-k",
    title: "Count number of subarrays with given Xor K",
    topic: "Bit Manipulation",
    subTopic: "Prefix XOR / Hashing",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/count-number-of-subarrays-with-given-xor-k/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Prefix XOR / Hash Map",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_counting-inversions",
    title: "Counting Inversions",
    topic: "Sorting",
    subTopic: "Divide and Conquer / Merge Sort",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/counting-inversions/",
    explanationLink: "https://www.geeksforgeeks.org/counting-inversions/",
    isLastMoment: false,
    pattern: "Merge Sort / Divide and Conquer",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_find-median-row-wise-sorted-matrix",
    title: "Find median in a row-wise sorted matrix",
    topic: "Binary Search",
    subTopic: "Binary Search on Answer / Sorting",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/find-median-row-wise-sorted-matrix/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Binary Search / Matrix",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_k-th-element-of-two-sorted-arrays",
    title: "K-th Element of Two Sorted Arrays",
    topic: "Two Pointers",
    subTopic: "Binary Search on Partitions / Two Pointers",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/k-th-element-of-two-sorted-arrays/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Binary Search / Divide and Conquer",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_315",
    title: "Count of Smaller Numbers After Self",
    topic: "Sorting",
    subTopic: "Merge Sort with inversion count / Fenwick Tree",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/count-of-smaller-numbers-after-self/",
    explanationLink:
      "https://neetcode.io/solutions/count-of-smaller-numbers-after-self",
    isLastMoment: false,
    pattern: "Merge Sort / Fenwick Tree / Segment Tree",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_4",
    title: "Median of Two Sorted Arrays",
    topic: "Binary Search",
    subTopic: "Binary Search on partitions",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/median-of-two-sorted-arrays/",
    explanationLink:
      "https://neetcode.io/solutions/median-of-two-sorted-arrays",
    isLastMoment: true,
    pattern: "Binary Search on partitions",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_41",
    title: "First Missing Positive",
    topic: "Sorting",
    subTopic: "In-place Hashing / Cyclic Sort",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/first-missing-positive/",
    explanationLink: "https://neetcode.io/solutions/first-missing-positive",
    isLastMoment: true,
    pattern: "In-place Hashing / Cyclic Sort",
    sources: ["GFG SDE Sheet", "Last Moment 79", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_42",
    title: "Trapping Rain Water",
    topic: "Two Pointers",
    subTopic: "Two Pointers / Stack / DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/trapping-rain-water/",
    explanationLink: "https://neetcode.io/solutions/trapping-rain-water",
    isLastMoment: true,
    pattern: "Two Pointers / Stack / Dynamic Programming",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_85",
    title: "Maximal Rectangle",
    topic: "Dynamic Programming",
    subTopic: "Stack + DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/maximal-rectangle/",
    explanationLink: "https://neetcode.io/solutions/maximal-rectangle",
    isLastMoment: false,
    pattern: "Stack + DP",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_candy",
    title: "Candy",
    topic: "Greedy",
    subTopic: "Greedy",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/candy/",
    explanationLink:
      "https://www.geeksforgeeks.org/candy-problem-greedy-approach/",
    isLastMoment: false,
    pattern: "Greedy",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1622",
    title: "Creating Strings",
    topic: "Backtracking / Recursion",
    subTopic: "Permutations with Duplicates",
    difficulty: "Easy",
    problemLink: "https://cses.fi/problemset/task/1622",
    explanationLink: "https://usaco.guide/problems/cses-1622",
    isLastMoment: true,
    pattern: "Backtracking",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1624",
    title: "Chessboard and Queens",
    topic: "Backtracking / Recursion",
    subTopic: "N-Queens Variation",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1624",
    explanationLink: "https://usaco.guide/problems/cses-1624",
    isLastMoment: true,
    pattern: "Backtracking",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_print-sums-subsets-given-array",
    title: "Subset Sums",
    topic: "Backtracking / Recursion",
    subTopic: "Recursion / Backtracking (Pick/Don't Pick)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/print-sums-subsets-given-array/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Backtracking / Recursion",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_rat-in-a-maze-backtracking-2",
    title: "Rat in a Maze",
    topic: "Backtracking / Recursion",
    subTopic: "Backtracking / Matrix Traversal",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/rat-in-a-maze-backtracking-2/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Backtracking / Matrix Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_131",
    title: "Palindrome Partitioning",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/palindrome-partitioning/",
    explanationLink: "https://neetcode.io/solutions/palindrome-partitioning",
    isLastMoment: false,
    pattern: "Recursive Backtracking",
    sources: ["NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_17",
    title: "Letter Combinations of a Phone Number",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
    explanationLink:
      "https://neetcode.io/solutions/letter-combinations-of-a-phone-number",
    isLastMoment: true,
    pattern: "Backtracking",
    sources: ["Last Moment 79", "NeetCode 150", "Blind 75"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_39",
    title: "Combination Sum",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/combination-sum/",
    explanationLink: "https://neetcode.io/solutions/combination-sum",
    isLastMoment: true,
    pattern: "Backtracking",
    sources: [
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
      "Blind 75",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_40",
    title: "Combination Sum II",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/combination-sum-ii/",
    explanationLink: "https://neetcode.io/solutions/combination-sum-ii",
    isLastMoment: false,
    pattern: "Recursive Backtracking",
    sources: ["NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_46",
    title: "Permutations",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/permutations/",
    explanationLink: "https://neetcode.io/solutions/permutations",
    isLastMoment: true,
    pattern: "Backtracking",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_77",
    title: "Combinations",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/combinations/",
    explanationLink:
      "https://www.geeksforgeeks.org/print-all-possible-combinations-of-r-elements/",
    isLastMoment: true,
    pattern: "Backtracking",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_78",
    title: "Subsets",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/subsets/",
    explanationLink: "https://neetcode.io/solutions/subsets",
    isLastMoment: true,
    pattern: "Backtracking",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_79",
    title: "Word Search",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/word-search/",
    explanationLink: "https://neetcode.io/solutions/word-search",
    isLastMoment: true,
    pattern: "Recursive Backtracking",
    sources: ["Last Moment 79", "NeetCode 150", "Blind 75"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_90",
    title: "Subsets II",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/subsets-ii/",
    explanationLink: "https://neetcode.io/solutions/subsets-ii",
    isLastMoment: false,
    pattern: "Recursive Backtracking",
    sources: ["NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_restore-ip-addresses",
    title: "Restore IP Addresses",
    topic: "Backtracking / Recursion",
    subTopic: "Recursive Backtracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/restore-ip-addresses/",
    explanationLink:
      "https://www.geeksforgeeks.org/program-to-generate-all-possible-valid-ip-addresses-from-given-string/",
    isLastMoment: true,
    pattern: "Recursive Backtracking",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_212",
    title: "Word Search II",
    topic: "Backtracking / Recursion",
    subTopic: "Trie + Recursive Backtracking",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/word-search-ii/",
    explanationLink: "https://neetcode.io/solutions/word-search-ii",
    isLastMoment: false,
    pattern: "Trie + Recursive Backtracking",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_37",
    title: "Sudoku Solver",
    topic: "Backtracking / Recursion",
    subTopic: "Backtracking",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/sudoku-solver/",
    explanationLink: "https://neetcode.io/solutions/sudoku-solver",
    isLastMoment: false,
    pattern: "Backtracking",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_51",
    title: "N-Queens",
    topic: "Backtracking / Recursion",
    subTopic: "Backtracking",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/n-queens/",
    explanationLink:
      "https://www.geeksforgeeks.org/n-queen-problem-backtracking-3/",
    isLastMoment: false,
    pattern: "Backtracking",
    sources: ["Striver SDE Sheet", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_permutation-sequence",
    title: "Permutation Sequence",
    topic: "Backtracking / Recursion",
    subTopic: "Math / Permutations / Recursion",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/permutation-sequence/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Math / Recursion / Permutations",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_108",
    title: "Convert Sorted Array to Binary Search Tree",
    topic: "Binary Search Trees",
    subTopic: "Recursion / Divide and Conquer",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",
    explanationLink:
      "https://www.geeksforgeeks.org/sorted-array-to-balanced-bst/",
    isLastMoment: true,
    pattern: "Recursion / Divide and Conquer / BST",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_653",
    title: "Find a pair with a given sum in BST",
    topic: "Binary Search Trees",
    subTopic: "BST Traversal / Two Pointers / Hashing",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "BST / Two Pointers / Hashing / Tree Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_search-in-a-binary-search-tree",
    title: "Search given Key in BST",
    topic: "Binary Search Trees",
    subTopic: "BST Traversal (Recursive/Iterative)",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/search-in-a-binary-search-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "BST / Tree Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_construct-bst-from-given-keys",
    title: "Construct BST from given keys",
    topic: "Binary Search Trees",
    subTopic: "BST Construction / Recursion",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/construct-bst-from-given-keys/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "BST / Recursion / Tree Construction",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_floor-and-ceil-from-a-bst",
    title: "Floor in a BST",
    topic: "Binary Search Trees",
    subTopic: "BST Traversal",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/floor-and-ceil-from-a-bst/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "BST / Tree Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_inorder-predecessor-successor-given-key-bst",
    title: "Find the inorder predecessor/successor of a given Key in BST.",
    topic: "Binary Search Trees",
    subTopic: "BST Traversal / Iteration",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/inorder-predecessor-successor-given-key-bst/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "BST / Tree Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_inorder-successor-in-binary-search-tree",
    title: "Inorder Successor in BST",
    topic: "Binary Search Trees",
    subTopic: "BST Traversal / Iteration",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/inorder-successor-in-binary-search-tree/",
    explanationLink:
      "https://www.geeksforgeeks.org/inorder-successor-in-binary-search-tree/",
    isLastMoment: true,
    pattern: "BST / Tree Traversal",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_kth-largest-element-in-bst-using-constant-extra-space",
    title: "Find K-th largest element in BST",
    topic: "Binary Search Trees",
    subTopic: "BST Traversal (Reverse Morris Inorder)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/kth-largest-element-in-bst-using-constant-extra-space/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "BST / Tree Traversal / Morris Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_1008",
    title: "Construct a BST from a preorder traversal",
    topic: "Binary Search Trees",
    subTopic: "BST Construction / Recursion with Range",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "BST / Recursion / Tree Construction",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_1382",
    title: "Balance a Binary Search Tree",
    topic: "Binary Search Trees",
    subTopic: "Inorder Traversal / Construct BST",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/balance-a-binary-search-tree/",
    explanationLink:
      "https://www.geeksforgeeks.org/convert-a-normal-bst-into-a-balanced-bst/",
    isLastMoment: false,
    pattern: "Inorder Traversal / BST Construction",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_173",
    title: "BST iterator",
    topic: "Binary Search Trees",
    subTopic: "Stack / Controlled Inorder Traversal",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/binary-search-tree-iterator/",
    explanationLink:
      "https://www.geeksforgeeks.org/implement-iterator-for-binary-search-tree/",
    isLastMoment: false,
    pattern: "BST / Stack / Iterator Design",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_450",
    title: "Delete Node in a BST",
    topic: "Binary Search Trees",
    subTopic: "BST Manipulation / Recursion",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/delete-node-in-a-bst/",
    explanationLink: "https://neetcode.io/solutions/delete-node-in-a-bst",
    isLastMoment: true,
    pattern: "BST / Recursion",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_largest-bst-subtree",
    title: "Size of the largest BST in a Binary Tree",
    topic: "Binary Search Trees",
    subTopic: "Tree Traversal (DFS with validation and size)",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/largest-bst-subtree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / DFS / BST Properties",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_recover-binary-search-tree",
    title: "Recover Binary Search Tree",
    topic: "Binary Search Trees",
    subTopic: "Inorder Traversal / Morris Traversal",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/recover-binary-search-tree/",
    explanationLink:
      "https://www.geeksforgeeks.org/fix-two-swapped-nodes-of-bst/",
    isLastMoment: false,
    pattern: "Inorder Traversal / Morris Traversal / BST",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_190",
    title: "Reverse Bits",
    topic: "Bit Manipulation",
    subTopic: "Bit Manipulation",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/reverse-bits/",
    explanationLink: "https://neetcode.io/solutions/reverse-bits",
    isLastMoment: true,
    pattern: "Bit Manipulation",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_191",
    title: "Number of 1 Bits",
    topic: "Bit Manipulation",
    subTopic: "Bit Counting",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/number-of-1-bits/",
    explanationLink: "https://neetcode.io/solutions/number-of-1-bits",
    isLastMoment: true,
    pattern: "Bit Manipulation",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_338",
    title: "Counting Bits",
    topic: "Bit Manipulation",
    subTopic: "Dynamic Programming / Bit Manipulation",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/counting-bits/",
    explanationLink: "https://neetcode.io/solutions/counting-bits",
    isLastMoment: true,
    pattern: "DP / Bit Manipulation",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2205",
    title: "Gray Code",
    topic: "Bit Manipulation",
    subTopic: "Constructive / Recursion",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/2205",
    explanationLink:
      "https://usaco.guide/problems/cses-2205-gray-code/solution",
    isLastMoment: true,
    pattern: "Recursion / Bit Manipulation",
    sources: ["CSES Problem Set"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_29",
    title: "Divide Two Integers",
    topic: "Bit Manipulation",
    subTopic: "using bit manipulation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/divide-two-integers/",
    explanationLink:
      "https://www.geeksforgeeks.org/divide-two-integers-without-using-multiplication-division-and-mod-operator/",
    isLastMoment: false,
    pattern: "Using bit manipulation",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_371",
    title: "Sum of Two Integers",
    topic: "Bit Manipulation",
    subTopic: "without + or -",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/sum-of-two-integers/",
    explanationLink: "https://neetcode.io/solutions/sum-of-two-integers",
    isLastMoment: false,
    pattern: "Without + or -",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_bitwise-and-of-numbers-range",
    title: "Bitwise AND of Numbers Range",
    topic: "Bit Manipulation",
    subTopic: "Bit Manipulation",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/bitwise-and-of-numbers-range/",
    explanationLink:
      "https://neetcode.io/solutions/bitwise-and-of-numbers-range",
    isLastMoment: false,
    pattern: "Bit Manipulation",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1163",
    title: "Traffic Lights",
    topic: "Data Structures",
    subTopic: "Set / Ordered Set",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1163",
    explanationLink:
      "https://usaco.guide/problems/cses-1163-traffic-lights/solution",
    isLastMoment: false,
    pattern: "Set / Simulation",
    sources: ["CSES Problem Set"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_146",
    title: "LRU Cache",
    topic: "Data Structures",
    subTopic: "Hash Map / Doubly Linked List",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/lru-cache/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Data Structure Design / Hash Map / Doubly Linked List",
    sources: ["Striver SDE Sheet", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_460",
    title: "LFU Cache",
    topic: "Data Structures",
    subTopic: "Hash Map / Doubly Linked List / Frequency List",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/lfu-cache/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Data Structure Design / Hash Map / Doubly Linked List",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "cses_1633",
    title: "Dice Combinations",
    topic: "Dynamic Programming",
    subTopic: "Basic DP",
    difficulty: "Easy",
    problemLink: "https://cses.fi/problemset/task/1633",
    explanationLink: "https://usaco.guide/problems/cses-1633",
    isLastMoment: true,
    pattern: "1D DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1634",
    title: "Minimizing Coins",
    topic: "Dynamic Programming",
    subTopic: "Coin Change (Min Coins)",
    difficulty: "Easy",
    problemLink: "https://cses.fi/problemset/task/1634",
    explanationLink: "https://usaco.guide/problems/cses-1634",
    isLastMoment: true,
    pattern: "DP - Coin Change",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1637",
    title: "Removing Digits",
    topic: "Dynamic Programming",
    subTopic: "Basic DP / Greedy",
    difficulty: "Easy",
    problemLink: "https://cses.fi/problemset/task/1637",
    explanationLink: "https://usaco.guide/problems/cses-1637",
    isLastMoment: true,
    pattern: "Greedy / DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "dynamic-programming_easy_frog-jump",
    title: "Frog Jump",
    topic: "Dynamic Programming",
    subTopic: "Simple DP",
    difficulty: "Easy",
    problemLink:
      "https://www.codingninjas.com/studio/problems/frog-jump_3621012",
    explanationLink:
      "https://www.codingninjas.com/studio/problems/frog-jump_3621012",
    isLastMoment: true,
    pattern: "1D DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1137",
    title: "N-th Tribonacci Number",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/n-th-tribonacci-number/",
    explanationLink: "https://neetcode.io/solutions/n-th-tribonacci-number",
    isLastMoment: true,
    pattern: "1D DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_509",
    title: "Fibonacci Number",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/fibonacci-number/",
    explanationLink:
      "https://www.geeksforgeeks.org/program-for-nth-fibonacci-number/",
    isLastMoment: true,
    pattern: "1D DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_70",
    title: "Climbing Stairs",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/climbing-stairs/",
    explanationLink: "https://neetcode.io/solutions/climbing-stairs",
    isLastMoment: true,
    pattern: "1D DP",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_746",
    title: "Min Cost Climbing Stairs",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/min-cost-climbing-stairs/",
    explanationLink: "https://neetcode.io/solutions/min-cost-climbing-stairs",
    isLastMoment: false,
    pattern: "1D DP",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1130",
    title: "Tree Matching",
    topic: "Dynamic Programming",
    subTopic: "DP on Trees",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1130",
    explanationLink:
      "https://usaco.guide/problems/cses-1130-tree-matching/solution",
    isLastMoment: false,
    pattern: "DP on Trees",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1158",
    title: "Book Shop",
    topic: "Dynamic Programming",
    subTopic: "0/1 Knapsack",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1158",
    explanationLink:
      "https://usaco.guide/problems/cses-1158-book-shop/solution",
    isLastMoment: true,
    pattern: "0 / 1 Knapsack",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1636",
    title: "Coin Combinations II",
    topic: "Dynamic Programming",
    subTopic: "Coin Change (Combinations)",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1636",
    explanationLink: "https://usaco.guide/problems/cses-1636",
    isLastMoment: true,
    pattern: "DP - Coin Change",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1745",
    title: "Money Sums",
    topic: "Dynamic Programming",
    subTopic: "Subset Sum Variation",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1745",
    explanationLink: "https://usaco.guide/problems/cses-1745",
    isLastMoment: true,
    pattern: "DP - Subset Sum",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2413",
    title: "Counting Towers",
    topic: "Dynamic Programming",
    subTopic: "DP with States",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/2413",
    explanationLink:
      "https://usaco.guide/problems/cses-2413-counting-towers/solution",
    isLastMoment: false,
    pattern: "DP with States",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "dynamic-programming_medium_partitions-with-given-difference",
    title: "Partitions With Given Difference",
    topic: "Dynamic Programming",
    subTopic: "Subset Sum variation",
    difficulty: "Medium",
    problemLink:
      "https://www.codingninjas.com/studio/problems/partitions-with-given-difference_3751628",
    explanationLink:
      "https://www.codingninjas.com/studio/problems/partitions-with-given-difference_3751628",
    isLastMoment: true,
    pattern: "DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_0-1-knapsack-problem-dp-10",
    title: "0-1 Knapsack",
    topic: "Dynamic Programming",
    subTopic: "Knapsack DP",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/0-1-knapsack-problem-dp-10/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / Knapsack",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_cutting-a-rod-dp-13",
    title: "Rod Cutting",
    topic: "Dynamic Programming",
    subTopic: "Unbounded Knapsack DP",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/cutting-a-rod-dp-13/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / Unbounded Knapsack",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_find-minimum-number-of-coins-that-make-a-given-value",
    title: "Find minimum number of coins that make a given value",
    topic: "Dynamic Programming",
    subTopic: "Coin Change (Min Coins)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/find-minimum-number-of-coins-that-make-a-given-value/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / Coin Change",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_longest-common-substring-dp-29",
    title: "Longest Common Substring",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/longest-common-substring-dp-29/",
    explanationLink:
      "https://www.geeksforgeeks.org/longest-common-substring-dp-29/",
    isLastMoment: true,
    pattern: "2D DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_maximize-the-number-of-segments-of-length-x-y-and-z",
    title: "Maximize the Cut Segments",
    topic: "Dynamic Programming",
    subTopic: "Unbounded Knapsack variation",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/maximize-the-number-of-segments-of-length-x-y-and-z/",
    explanationLink:
      "https://www.geeksforgeeks.org/maximize-the-number-of-segments-of-length-x-y-and-z/",
    isLastMoment: true,
    pattern: "DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_maximum-sum-increasing-subsequence",
    title: "Maximum sum increasing subsequence",
    topic: "Dynamic Programming",
    subTopic: "LIS Variation",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / LIS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_subset-sum-problem-dp-25",
    title: "Subset Sum",
    topic: "Dynamic Programming",
    subTopic: "Knapsack DP / Subset Sum DP",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/subset-sum-problem-dp-25/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / Subset Sum",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_139",
    title: "Word Break",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/word-break/",
    explanationLink: "https://neetcode.io/solutions/word-break",
    isLastMoment: true,
    pattern: "1D DP",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_152",
    title: "Maximum Product Subarray",
    topic: "Dynamic Programming",
    subTopic: "1D DP with careful state",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/maximum-product-subarray/",
    explanationLink: "https://neetcode.io/solutions/maximum-product-subarray",
    isLastMoment: false,
    pattern: "1D DP with careful state",
    sources: ["Blind 75", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_213",
    title: "House Robber II",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/house-robber-ii/",
    explanationLink: "https://neetcode.io/solutions/house-robber-ii",
    isLastMoment: false,
    pattern: "1D DP",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_300",
    title: "Longest Increasing Subsequence",
    topic: "Dynamic Programming",
    subTopic: "1D DP / Patience Sorting O(NlogN)",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/longest-increasing-subsequence/",
    explanationLink:
      "https://neetcode.io/solutions/longest-increasing-subsequence",
    isLastMoment: true,
    pattern: "1D DP / Patience Sorting / Binary Search",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_309",
    title: "Best Time to Buy and Sell Stock with Cooldown",
    topic: "Dynamic Programming",
    subTopic: "DP with States",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/",
    explanationLink:
      "https://neetcode.io/solutions/best-time-to-buy-and-sell-stock-with-cooldown",
    isLastMoment: false,
    pattern: "DP",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_322",
    title: "Coin change",
    topic: "Dynamic Programming",
    subTopic: "Unbounded Knapsack / Coin Change DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/coin-change/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / Coin Change",
    sources: ["Striver SDE Sheet", "NeetCode 150", "Blind 75"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_377",
    title: "Combination Sum IV",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/combination-sum-iv/",
    explanationLink: "https://neetcode.io/solutions/combination-sum-iv",
    isLastMoment: false,
    pattern: "1D DP",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_416",
    title: "Partition Equal Subset Sum",
    topic: "Dynamic Programming",
    subTopic: "Subset Sum Variation - 2D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/partition-equal-subset-sum/",
    explanationLink: "https://neetcode.io/solutions/partition-equal-subset-sum",
    isLastMoment: true,
    pattern: "Subset Sum / 2D DP / Knapsack",
    sources: ["Blind 75", "Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_494",
    title: "Target Sum",
    topic: "Dynamic Programming",
    subTopic: "Subset Sum Variation - DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/target-sum/",
    explanationLink: "https://neetcode.io/solutions/target-sum",
    isLastMoment: false,
    pattern: "Subset Sum / DP",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_62",
    title: "Unique Paths",
    topic: "Dynamic Programming",
    subTopic: "2D DP / Combinatorics",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/unique-paths/",
    explanationLink: "https://neetcode.io/solutions/unique-paths",
    isLastMoment: true,
    pattern: "2D DP / Combinatorics",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_63",
    title: "Unique Paths II",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/unique-paths-ii/",
    explanationLink: "https://neetcode.io/solutions/unique-paths-ii",
    isLastMoment: true,
    pattern: "2D DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_64",
    title: "Minimum Path Sum",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/minimum-path-sum/",
    explanationLink: "https://neetcode.io/solutions/minimum-path-sum",
    isLastMoment: false,
    pattern: "2D DP",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_714",
    title: "Best Time to Buy and Sell Stock with Transaction Fee",
    topic: "Dynamic Programming",
    subTopic: "DP with States",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/",
    explanationLink:
      "https://neetcode.io/solutions/best-time-to-buy-and-sell-stock-with-transaction-fee",
    isLastMoment: false,
    pattern: "DP",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_91",
    title: "Decode Ways",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/decode-ways/",
    explanationLink: "https://neetcode.io/solutions/decode-ways",
    isLastMoment: true,
    pattern: "1D DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_count-vowels-permutation",
    title: "Count Vowels Permutation",
    topic: "Dynamic Programming",
    subTopic: "DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/count-vowels-permutation/",
    explanationLink:
      "https://www.geeksforgeeks.org/count-vowel-permutations-of-length-n/",
    isLastMoment: false,
    pattern: "DP",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_dungeon-game",
    title: "Dungeon Game",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/dungeon-game/",
    explanationLink: "https://www.geeksforgeeks.org/dungeon-game-dp/",
    isLastMoment: false,
    pattern: "2D DP",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_house-robber",
    title: "House Robber",
    topic: "Dynamic Programming",
    subTopic: "1D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/house-robber/",
    explanationLink: "https://neetcode.io/solutions/house-robber",
    isLastMoment: true,
    pattern: "1D DP",
    sources: ["Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_longest-common-subsequence",
    title: "Longest Common Subsequence",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/longest-common-subsequence/",
    explanationLink: "https://neetcode.io/solutions/longest-common-subsequence",
    isLastMoment: true,
    pattern: "2D DP",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_triangle",
    title: "Triangle",
    topic: "Dynamic Programming",
    subTopic: "2D DP - space optimization",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/triangle/",
    explanationLink: "https://neetcode.io/solutions/triangle",
    isLastMoment: true,
    pattern: "2D DP - space optimization",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1744",
    title: "Rectangle Cutting",
    topic: "Dynamic Programming",
    subTopic: "Game DP",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1744",
    explanationLink: "https://usaco.guide/problems/cses-1744",
    isLastMoment: false,
    pattern: "Game DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1746",
    title: "Array Description",
    topic: "Dynamic Programming",
    subTopic: "DP on Grid/State",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1746",
    explanationLink: "https://usaco.guide/problems/cses-1746",
    isLastMoment: false,
    pattern: "DP on Grid / State",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_matrix-chain-multiplication-dp-8",
    title: "Matrix Chain Multiplication",
    topic: "Dynamic Programming",
    subTopic: "Interval DP",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/matrix-chain-multiplication-dp-8/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / Interval DP",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_1235",
    title: "Maximum profit in Job scheduling",
    topic: "Dynamic Programming",
    subTopic: "DP with Sorting / Interval Scheduling",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/maximum-profit-in-job-scheduling/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / Sorting / Interval Scheduling",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_140",
    title: "Word Break II",
    topic: "Dynamic Programming",
    subTopic: "DP with Backtracking / Trie",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/word-break-ii/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming / Backtracking / Trie",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1547",
    title: "Minimum Cost to Cut a Stick",
    topic: "Dynamic Programming",
    subTopic: "Interval DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/minimum-cost-to-cut-a-stick/",
    explanationLink:
      "https://www.geeksforgeeks.org/minimum-cost-to-cut-a-stick/",
    isLastMoment: false,
    pattern: "Interval DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_188",
    title: "Best Time to Buy and Sell Stock IV",
    topic: "Dynamic Programming",
    subTopic: "DP with States (k transactions)",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/",
    explanationLink:
      "https://neetcode.io/solutions/best-time-to-buy-and-sell-stock-iv",
    isLastMoment: false,
    pattern: "DP",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_673",
    title: "Number of Longest Increasing Subsequence",
    topic: "Dynamic Programming",
    subTopic: "DP counting",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/number-of-longest-increasing-subsequence/",
    explanationLink:
      "https://www.geeksforgeeks.org/number-of-longest-increasing-subsequence/",
    isLastMoment: true,
    pattern: "DP counting",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_72",
    title: "Edit Distance",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/edit-distance/",
    explanationLink: "https://neetcode.io/solutions/edit-distance",
    isLastMoment: true,
    pattern: "2D DP",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_burst-balloons",
    title: "Burst Balloons",
    topic: "Dynamic Programming",
    subTopic: "Interval DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/burst-balloons/",
    explanationLink: "https://neetcode.io/solutions/burst-balloons",
    isLastMoment: true,
    pattern: "Interval DP",
    sources: ["Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_longest-palindromic-subsequence",
    title: "Longest Palindromic Subsequence",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/longest-palindromic-subsequence/",
    explanationLink:
      "https://neetcode.io/solutions/longest-palindromic-subsequence",
    isLastMoment: true,
    pattern: "2D DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_maximum-score-from-performing-multiplication-operations",
    title: "Maximum Score From Performing Multiplication Operations",
    topic: "Dynamic Programming",
    subTopic: "Interval DP",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations/",
    explanationLink:
      "https://www.geeksforgeeks.org/maximum-score-from-performing-multiplication-operations/",
    isLastMoment: false,
    pattern: "Interval DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_palindrome-partitioning-ii",
    title: "Palindrome Partitioning II",
    topic: "Dynamic Programming",
    subTopic: "DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/palindrome-partitioning-ii/",
    explanationLink:
      "https://www.geeksforgeeks.org/dynamic-programming-set-17-palindrome-partitioning-c/",
    isLastMoment: false,
    pattern: "DP",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_super-egg-drop",
    title: "Egg Dropping",
    topic: "Dynamic Programming",
    subTopic: "DP with Optimization",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/super-egg-drop/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Dynamic Programming",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_super-egg-dropping",
    title: "Super Egg Dropping",
    topic: "Dynamic Programming",
    subTopic: "DP with Optimization",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/super-egg-dropping/",
    explanationLink:
      "https://www.geeksforgeeks.org/advanced-egg-dropping-puzzle/",
    isLastMoment: false,
    pattern: "DP with Optimization",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_valid-square",
    title: "Valid Square",
    topic: "Geometry",
    subTopic: "Distance calculations",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/valid-square/",
    explanationLink:
      "https://www.geeksforgeeks.org/check-if-four-points-form-a-square/",
    isLastMoment: true,
    pattern: "Distance calculations",
    sources: ["GFG SDE Sheet", "Last Moment 79", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2189",
    title: "Point Location Test",
    topic: "Geometry",
    subTopic: "Cross product",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/2189",
    explanationLink: "https://usaco.guide/problems/cses-2189",
    isLastMoment: false,
    pattern: "Cross product",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2190",
    title: "Polygon Area",
    topic: "Geometry",
    subTopic: "Shoelace formula",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/2190",
    explanationLink: "https://usaco.guide/problems/cses-2190",
    isLastMoment: true,
    pattern: "Shoelace formula",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2192",
    title: "Polygon Lattice Points",
    topic: "Geometry",
    subTopic: "Pick's Theorem + GCD",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/2192",
    explanationLink: "https://usaco.guide/problems/cses-2192",
    isLastMoment: false,
    pattern: "Pick's Theorem + GCD",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2193",
    title: "Point in Polygon Test",
    topic: "Geometry",
    subTopic: "Ray Casting / Winding Number",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/2193",
    explanationLink: "https://usaco.guide/problems/cses-2193",
    isLastMoment: false,
    pattern: "Ray Casting / Winding Number",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2195",
    title: "Convex Hull (Monotone Chain)",
    topic: "Geometry",
    subTopic: "Convex Hull",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/2195",
    explanationLink: "https://usaco.guide/problems/cses-2195",
    isLastMoment: true,
    pattern: "Monotone Chain Algorithm",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2196",
    title: "Minimum Euclidean Distance",
    topic: "Geometry",
    subTopic: "Divide and Conquer",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/2196",
    explanationLink: "https://usaco.guide/problems/cses-2196",
    isLastMoment: false,
    pattern: "Divide and Conquer",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1971",
    title: "Find if Path Exists in Graph",
    topic: "Graphs",
    subTopic: "BFS/DFS",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/find-if-path-exists-in-graph/",
    explanationLink:
      "https://www.geeksforgeeks.org/path-between-two-vertices-in-an-undirected-graph/",
    isLastMoment: true,
    pattern: "BFS / DFS",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_733",
    title: "Flood Fill",
    topic: "Graphs",
    subTopic: "BFS / DFS",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/flood-fill/",
    explanationLink: "https://neetcode.io/solutions/flood-fill",
    isLastMoment: false,
    pattern: "BFS / DFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_find-the-town-judge",
    title: "Find the Town Judge",
    topic: "Graphs",
    subTopic: "Graph Degree",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/find-the-town-judge/",
    explanationLink: "https://www.geeksforgeeks.org/find-the-town-judge/",
    isLastMoment: true,
    pattern: "Graph Degree",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1678",
    title: "Round Trip II",
    topic: "Graphs",
    subTopic: "DFS, Cycle Detection",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1678",
    explanationLink:
      "https://usaco.guide/problems/cses-1678-round-trip-ii/solution",
    isLastMoment: false,
    pattern: "DFS / Cycle Detection",
    sources: ["CSES Problem Set", "Striver CP Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1680",
    title: "Longest Flight Route",
    topic: "Graphs",
    subTopic: "Topological Sort, DP on DAG",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1680",
    explanationLink:
      "https://usaco.guide/problems/cses-1680-longest-flight-route/solution",
    isLastMoment: false,
    pattern: "Topological Sort / DP on DAG",
    sources: ["CSES Problem Set", "Striver CP Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_bellman-ford-algorithm-introduction-and-example",
    title: "Bellman-Ford Algo",
    topic: "Graphs",
    subTopic: "Shortest Path / Negative Cycles",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/bellman-ford-algorithm-introduction-and-example/",
    explanationLink:
      "https://www.geeksforgeeks.org/bellman-ford-algorithm-dp-23/",
    isLastMoment: false,
    pattern: "Graph / Shortest Path / Bellman-Ford",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_breadth-first-search-or-bfs-for-a-graph",
    title: "BFS",
    topic: "Graphs",
    subTopic: "Breadth First Search",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/breadth-first-search-or-bfs-for-a-graph/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph Traversal / BFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_depth-first-search-dfs-for-a-graph",
    title: "DFS",
    topic: "Graphs",
    subTopic: "Depth First Search",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/depth-first-search-dfs-for-a-graph/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph Traversal / DFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_detect-cycle-in-a-directed-graph-using-dfs",
    title: "Detect A cycle in a Directed Graph using DFS",
    topic: "Graphs",
    subTopic: "Cycle Detection / DFS",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/detect-cycle-in-a-directed-graph-using-dfs/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / Cycle Detection / DFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_detect-cycle-in-a-directed-graph-using-kahn-algorithm",
    title: "Detect A cycle in a Directed Graph using BFS",
    topic: "Graphs",
    subTopic: "Cycle Detection / BFS (Kahn's Algorithm)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/detect-cycle-in-a-directed-graph-using-kahn-algorithm/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / Cycle Detection / BFS / Topological Sort",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_detect-cycle-in-an-undirected-graph-using-dfs",
    title: "Detect A cycle in Undirected Graph using DFS",
    topic: "Graphs",
    subTopic: "Cycle Detection / DFS",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/detect-cycle-in-an-undirected-graph-using-dfs/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / Cycle Detection / DFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_detect-cycle-undirected-graph-using-bfs",
    title: "Detect A cycle in Undirected Graph using BFS",
    topic: "Graphs",
    subTopic: "Cycle Detection / BFS",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/detect-cycle-undirected-graph-using-bfs/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / Cycle Detection / BFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_dijkstras-shortest-path-algorithm-greedy-algo-7",
    title: "Dijkstra's Algorithm",
    topic: "Graphs",
    subTopic: "Shortest Path / Priority Queue",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-greedy-algo-7/",
    explanationLink:
      "https://www.geeksforgeeks.org/dijkstras-algorithm-for-adjacency-list-representation-greedy-algo-8/",
    isLastMoment: false,
    pattern: "Graph / Shortest Path / Dijkstra",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_topological-sorting-bfs",
    title: "Topological Sort BFS",
    topic: "Graphs",
    subTopic: "Topological Sort / BFS (Kahn's Algorithm)",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/topological-sorting-bfs/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / Topological Sort / BFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_topological-sorting-dfs",
    title: "Topological Sort DFS",
    topic: "Graphs",
    subTopic: "Topological Sort / DFS",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/topological-sorting-dfs/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / Topological Sort / DFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_1091",
    title: "Shortest Path in Binary Matrix",
    topic: "Graphs",
    subTopic: "BFS 0-1 or Dijkstra",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/shortest-path-in-binary-matrix/",
    explanationLink:
      "https://neetcode.io/solutions/shortest-path-in-binary-matrix",
    isLastMoment: false,
    pattern: "BFS / Dijkstra",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1584",
    title: "MST using Prim's Algo",
    topic: "Graphs",
    subTopic: "Minimum Spanning Tree (Prim's / Kruskal's)",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/min-cost-to-connect-all-points/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / MST / Prim's Algorithm",
    sources: ["NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_200",
    title: "Number of Islands",
    topic: "Graphs",
    subTopic: "BFS / DFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/number-of-islands/",
    explanationLink: "https://neetcode.io/solutions/number-of-islands",
    isLastMoment: true,
    pattern: "BFS / DFS",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_207",
    title: "Course Schedule",
    topic: "Graphs",
    subTopic: "Topological Sort - DFS / BFS with Kahn's",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/course-schedule/",
    explanationLink: "https://neetcode.io/solutions/course-schedule",
    isLastMoment: true,
    pattern: "Topological Sort / DFS / BFS",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_286",
    title: "Walls and Gates",
    topic: "Graphs",
    subTopic: "BFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/walls-and-gates/",
    explanationLink: "https://neetcode.io/solutions/walls-and-gates",
    isLastMoment: false,
    pattern: "BFS",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_417",
    title: "Pacific Atlantic Water Flow",
    topic: "Graphs",
    subTopic: "Multi-source DFS/BFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/pacific-atlantic-water-flow/",
    explanationLink:
      "https://neetcode.io/solutions/pacific-atlantic-water-flow",
    isLastMoment: false,
    pattern: "Multi-source DFS / BFS",
    sources: ["NeetCode 150", "Blind 75"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_785",
    title: "Bipartite Check using BFS",
    topic: "Graphs",
    subTopic: "Graph Coloring / BFS / DFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/is-graph-bipartite/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / Bipartite Check / BFS / DFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_787",
    title: "Cheapest Flights Within K Stops",
    topic: "Graphs",
    subTopic: "BFS / Dijkstra variation",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/cheapest-flights-within-k-stops/",
    explanationLink:
      "https://neetcode.io/solutions/cheapest-flights-within-k-stops",
    isLastMoment: false,
    pattern: "BFS / Dijkstra variation / Bellman-Ford",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_994",
    title: "Rotting Oranges",
    topic: "Graphs",
    subTopic: "BFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/rotting-oranges/",
    explanationLink: "https://neetcode.io/solutions/rotting-oranges",
    isLastMoment: false,
    pattern: "BFS",
    sources: ["NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_clone-graph",
    title: "Clone Graph",
    topic: "Graphs",
    subTopic: "BFS / DFS with Hash Map",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/clone-graph/",
    explanationLink: "https://neetcode.io/solutions/clone-graph",
    isLastMoment: true,
    pattern: "BFS / DFS / Hash Map",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_minesweeper",
    title: "Minesweeper",
    topic: "Graphs",
    subTopic: "DFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/minesweeper/",
    explanationLink:
      "https://www.geeksforgeeks.org/minesweeper-game-a-dfs-application/",
    isLastMoment: false,
    pattern: "DFS",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_network-delay-time",
    title: "Network Delay Time",
    topic: "Graphs",
    subTopic: "Dijkstra's Algorithm",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/network-delay-time/",
    explanationLink: "https://neetcode.io/solutions/network-delay-time",
    isLastMoment: true,
    pattern: "Dijkstra's Algorithm",
    sources: ["Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_number-of-connected-components-in-an-undirected-graph",
    title: "Number of Connected Components in an Undirected Graph",
    topic: "Graphs",
    subTopic: "DFS/BFS/Union Find",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/",
    explanationLink:
      "https://neetcode.io/solutions/number-of-connected-components-in-an-undirected-graph",
    isLastMoment: true,
    pattern: "DFS / BFS / Union Find",
    sources: ["Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1668",
    title: "Building Teams",
    topic: "Graphs",
    subTopic: "Bipartite Check",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1668",
    explanationLink: "https://usaco.guide/problems/cses-1668",
    isLastMoment: true,
    pattern: "Bipartite Check",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1684",
    title: "Giant Pizza",
    topic: "Graphs",
    subTopic: "2-SAT via Kosaraju/Tarjan + SCC",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1684",
    explanationLink: "https://usaco.guide/problems/cses-1684",
    isLastMoment: false,
    pattern: "2-SAT via Kosaraju / Tarjan + SCC",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1686",
    title: "Coin Collector",
    topic: "Graphs",
    subTopic: "SCC (Kosaraju/Tarjan), DP on DAG of SCCs",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1686",
    explanationLink:
      "https://usaco.guide/problems/cses-1686-coin-collector/solution",
    isLastMoment: false,
    pattern: "SCC / DP on DAG",
    sources: ["CSES Problem Set", "Striver CP Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1689",
    title: "Knight's Tour",
    topic: "Graphs",
    subTopic: "Backtracking/Heuristics - hard CP",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1689",
    explanationLink: "https://usaco.guide/problems/cses-1689",
    isLastMoment: false,
    pattern: "Backtracking / Heuristics - hard CP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1690",
    title: "Hamiltonian Flights",
    topic: "Graphs",
    subTopic: "Hamiltonian Cycle - hard CP",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1690",
    explanationLink:
      "https://usaco.guide/problems/cses-1690-hamiltonian-flights/solution",
    isLastMoment: false,
    pattern: "Hamiltonian Cycle - hard CP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_floyd-warshall-algorithm-dp-16",
    title: "Floyd-Warshall Algorithm",
    topic: "Graphs",
    subTopic: "Implementation - AP SP",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/floyd-warshall-algorithm-dp-16/",
    explanationLink:
      "https://www.geeksforgeeks.org/floyd-warshall-algorithm-dp-16/",
    isLastMoment: false,
    pattern: "Implementation - AP SP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver CP Sheet",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_kruskals-minimum-spanning-tree-algorithm-greedy-algo-2",
    title: "Minimum Spanning Tree (Kruskal's / Prim's)",
    topic: "Graphs",
    subTopic: "MST Algorithms (Kruskal, Prim)",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/kruskals-minimum-spanning-tree-algorithm-greedy-algo-2/",
    explanationLink:
      "https://www.geeksforgeeks.org/minimum-spanning-tree-introduction-and-applications/",
    isLastMoment: true,
    pattern: "Prim's Algorithm / Kruskal's Algorithm / MST",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_m-coloring-problem-backtracking-5",
    title: "M-Coloring Problem",
    topic: "Graphs",
    subTopic: "Backtracking / Graph Coloring",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/m-coloring-problem-backtracking-5/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Backtracking / Graph Coloring",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_strongly-connected-components-kosarajus-algorithm-graph",
    title: "Strongly Connected Component(using KosaRaju's algo)",
    topic: "Graphs",
    subTopic: "SCC / DFS",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/strongly-connected-components-kosarajus-algorithm-graph/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Graph / SCC / Kosaraju's Algorithm / DFS",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1192",
    title: "Critical Connections in a Network",
    topic: "Graphs",
    subTopic: "Tarjan's / Bridge finding",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/critical-connections-in-a-network/",
    explanationLink:
      "https://neetcode.io/solutions/critical-connections-in-a-network",
    isLastMoment: true,
    pattern: "Tarjan's Algorithm / Bridge Finding",
    sources: ["Last Moment 79"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_684",
    title:
      "Disjoint Set Union (DSU) (Implementation and problems like Redundant Connection)",
    topic: "Graphs",
    subTopic: "DSU",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/redundant-connection/",
    explanationLink: "https://www.geeksforgeeks.org/union-find/",
    isLastMoment: true,
    pattern: "DSU",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_alien-dictionary",
    title: "Alien Dictionary",
    topic: "Graphs",
    subTopic: "Topological Sort",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/alien-dictionary/",
    explanationLink: "https://neetcode.io/solutions/alien-dictionary",
    isLastMoment: false,
    pattern: "Topological Sort",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_check-if-a-string-contains-all-binary-codes-of-size-k",
    title: "Check If a String Contains All Binary Codes of Size K",
    topic: "Graphs",
    subTopic: "BFS on graph of codes",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k/",
    explanationLink:
      "https://www.geeksforgeeks.org/check-if-a-binary-string-contains-all-binary-codes-of-size-k/",
    isLastMoment: false,
    pattern: "BFS on graph of codes",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_swim-in-rising-water",
    title: "Swim in Rising Water",
    topic: "Graphs",
    subTopic: "Dijkstra's on grid / Union Find",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/swim-in-rising-water/",
    explanationLink: "https://neetcode.io/solutions/swim-in-rising-water",
    isLastMoment: false,
    pattern: "Dijkstra / Union Find / BFS",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1090",
    title: "Ferris Wheel",
    topic: "Greedy",
    subTopic: "Two Pointers + Sorting",
    difficulty: "Easy",
    problemLink: "https://cses.fi/problemset/task/1090",
    explanationLink: "https://usaco.guide/problems/cses-1090",
    isLastMoment: true,
    pattern: "Two Pointers / Sorting / Greedy",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_455",
    title: "Assign Cookies",
    topic: "Greedy",
    subTopic: "Greedy + Sorting",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/assign-cookies/",
    explanationLink: "https://www.geeksforgeeks.org/assign-cookies/",
    isLastMoment: true,
    pattern: "Greedy / Sorting",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_maximum-units-on-a-truck",
    title: "Maximum Units on a Truck",
    topic: "Greedy",
    subTopic: "Sorting by Unit Value",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/maximum-units-on-a-truck/",
    explanationLink: "https://www.geeksforgeeks.org/maximum-units-on-a-truck/",
    isLastMoment: true,
    pattern: "Greedy / Sorting",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_fractional-knapsack-problem",
    title: "Fractional Knapsack Problem",
    topic: "Greedy",
    subTopic: "Sorting by Value/Weight Ratio",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/fractional-knapsack-problem/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Greedy / Sorting",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_job-sequencing-problem",
    title: "Job Sequencing Problem",
    topic: "Greedy",
    subTopic: "Sorting / Disjoint Set Union (DSU)",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/job-sequencing-problem/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Greedy / Sorting / DSU",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_minimum-number-platforms-required-railwaybus-station",
    title: "Minimum Number of Platforms Required for a Railway/Bus Station",
    topic: "Greedy",
    subTopic: "Sorting / Sweep Line / Two Pointers / Min-Heap",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/minimum-number-platforms-required-railwaybus-station/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Greedy / Sorting / Sweep Line / Heap",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_n-meetings-in-one-room",
    title: "N meetings in one room",
    topic: "Greedy",
    subTopic: "Activity Selection / Sorting",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/n-meetings-in-one-room/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Greedy / Sorting by End Time",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_134",
    title: "Gas Station",
    topic: "Greedy",
    subTopic: "Greedy",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/gas-station/",
    explanationLink: "https://neetcode.io/solutions/gas-station",
    isLastMoment: true,
    pattern: "Greedy",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_bag-of-tokens",
    title: "Bag of Tokens",
    topic: "Greedy",
    subTopic: "Greedy + Sorting / Two Pointers",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/bag-of-tokens/",
    explanationLink: "https://www.geeksforgeeks.org/bag-of-tokens/",
    isLastMoment: false,
    pattern: "Greedy",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_broken-calculator",
    title: "Broken Calculator",
    topic: "Greedy",
    subTopic: "Greedy math",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/broken-calculator/",
    explanationLink:
      "https://www.geeksforgeeks.org/minimum-number-of-operations-to-convert-x-to-y-using-multiply-by-2-and-subtract-1/",
    isLastMoment: false,
    pattern: "Greedy math",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_eliminate-maximum-number-of-monsters",
    title: "Eliminate Maximum Number of Monsters",
    topic: "Greedy",
    subTopic: "Sorting",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/eliminate-maximum-number-of-monsters/",
    explanationLink:
      "https://www.geeksforgeeks.org/eliminate-maximum-number-of-monsters/",
    isLastMoment: true,
    pattern: "Sorting",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_hand-of-straights",
    title: "Hand of Straights",
    topic: "Greedy",
    subTopic: "Greedy + Data Structures (Map/Heap)",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/hand-of-straights/",
    explanationLink:
      "https://www.geeksforgeeks.org/divide-deck-cards-subsets-size-k-consecutive-cards/",
    isLastMoment: false,
    pattern: "Greedy",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_minimum-number-of-arrows-to-burst-balloons",
    title: "Minimum Number of Arrows to Burst Balloons",
    topic: "Greedy",
    subTopic: "Sorting by End Points",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/",
    explanationLink:
      "https://neetcode.io/solutions/minimum-number-of-arrows-to-burst-balloons",
    isLastMoment: true,
    pattern: "Greedy / Sorting by End Points",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_non-overlapping-intervals",
    title: "Non-overlapping Intervals",
    topic: "Greedy",
    subTopic: "Interval Scheduling",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/non-overlapping-intervals/",
    explanationLink: "https://neetcode.io/solutions/non-overlapping-intervals",
    isLastMoment: true,
    pattern: "Greedy / Sorting by End Time",
    sources: ["GFG SDE Sheet", "Last Moment 79", "NeetCode 150", "Striver A2Z"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_partition-labels",
    title: "Partition Labels",
    topic: "Greedy",
    subTopic: "Greedy",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/partition-labels/",
    explanationLink: "https://neetcode.io/solutions/partition-labels",
    isLastMoment: true,
    pattern: "Greedy",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1074",
    title: "Stick Lengths",
    topic: "Greedy",
    subTopic: "Median + Greedy",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1074",
    explanationLink: "https://usaco.guide/problems/cses-1074",
    isLastMoment: false,
    pattern: "Median + Greedy",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1084",
    title: "Apartments",
    topic: "Greedy",
    subTopic: "Sorting + Two Pointers",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1084",
    explanationLink: "https://usaco.guide/problems/cses-1084",
    isLastMoment: false,
    pattern: "Sorting + Two Pointers",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1091",
    title: "Concert Tickets",
    topic: "Greedy",
    subTopic: "Sorting + Binary Search/Set lower_bound",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1091",
    explanationLink: "https://usaco.guide/problems/cses-1091",
    isLastMoment: false,
    pattern: "Sorting + Binary Search / Set lower_bound",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1092",
    title: "Collecting Numbers",
    topic: "Greedy",
    subTopic: "Simulation / Greedy",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1092",
    explanationLink: "https://usaco.guide/problems/cses-1092",
    isLastMoment: false,
    pattern: "Simulation / Greedy",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1046",
    title: "Last Stone Weight",
    topic: "Heaps",
    subTopic: "Heap",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/last-stone-weight/",
    explanationLink: "https://neetcode.io/solutions/last-stone-weight",
    isLastMoment: true,
    pattern: "Heap",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_703",
    title: "K-th largest element in a stream.",
    topic: "Heaps",
    subTopic: "Min-Heap",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/kth-largest-element-in-a-stream/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Heap / Data Stream / Design",
    sources: ["Striver SDE Sheet", "NeetCode 150", "Blind 75"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_find-k-pairs-maximum-sum-two-arrays",
    title: "Find k pairs with maximum sums from two arrays",
    topic: "Heaps",
    subTopic: "Heap / K-way Merge idea",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/find-k-pairs-maximum-sum-two-arrays/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Heap / Sorting",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_max-heap-in-java",
    title: "Max Heap in Java",
    topic: "Heaps",
    subTopic: "Heap Implementation",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/max-heap-in-java/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Heap / Data Structure Design",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_merge-k-sorted-arrays",
    title: "Merge k Sorted Arrays",
    topic: "Heaps",
    subTopic: "Min-Heap",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/merge-k-sorted-arrays/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Heap / Merge",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_min-heap-in-java",
    title: "Min-Heap in Java",
    topic: "Heaps",
    subTopic: "Heap Implementation",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/min-heap-in-java/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Heap / Data Structure Design",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1985",
    title: "Find the Kth Largest Integer in the Array",
    topic: "Heaps",
    subTopic: "Min-Heap (Custom Comparator for Strings)",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array/",
    explanationLink:
      "https://www.geeksforgeeks.org/kth-largest-element-in-an-array/",
    isLastMoment: true,
    pattern: "Min-Heap / String Comparison",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_215",
    title: "Kth Largest Element in an Array",
    topic: "Heaps",
    subTopic: "Min-Heap / Quickselect",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/kth-largest-element-in-an-array/",
    explanationLink:
      "https://neetcode.io/solutions/kth-largest-element-in-an-array",
    isLastMoment: true,
    pattern: "Min-Heap / Quickselect",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_347",
    title: "Top K Frequent Elements",
    topic: "Heaps",
    subTopic: "Min-Heap / Max-Heap",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/top-k-frequent-elements/",
    explanationLink: "https://neetcode.io/solutions/top-k-frequent-elements",
    isLastMoment: true,
    pattern: "Min-Heap / Max-Heap",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_355",
    title: "Design Twitter",
    topic: "Heaps",
    subTopic: "Heap + Data Structures",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/design-twitter/",
    explanationLink: "https://www.geeksforgeeks.org/design-twitter/",
    isLastMoment: false,
    pattern: "Heap + Data Structures",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_621",
    title: "Task Scheduler",
    topic: "Heaps",
    subTopic: "Max-Heap + Queue",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/task-scheduler/",
    explanationLink: "https://neetcode.io/solutions/task-scheduler",
    isLastMoment: false,
    pattern: "Max-Heap + Queue",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_k-closest-points-to-origin",
    title: "K Closest Points to Origin",
    topic: "Heaps",
    subTopic: "Max-Heap",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/k-closest-points-to-origin/",
    explanationLink: "https://neetcode.io/solutions/k-closest-points-to-origin",
    isLastMoment: false,
    pattern: "Max-Heap",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1630",
    title: "Task and Deadlines",
    topic: "Heaps",
    subTopic: "Sorting + Heap",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1630",
    explanationLink: "https://usaco.guide/problems/cses-1630",
    isLastMoment: true,
    pattern: "Sorting + Heap",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_295",
    title: "Find Median from Data Stream",
    topic: "Heaps",
    subTopic: "Two Heaps (Max-Heap, Min-Heap)",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/find-median-from-data-stream/",
    explanationLink:
      "https://neetcode.io/solutions/find-median-from-data-stream",
    isLastMoment: true,
    pattern: "Two Heaps",
    sources: [
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
      "Blind 75",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_502",
    title: "IPO",
    topic: "Greedy",
    subTopic: "Greedy, Two Heaps",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/ipo/",
    explanationLink:
      "https://www.geeksforgeeks.org/ipo-investing-in-projects-to-maximize-profit/",
    isLastMoment: false,
    pattern: "Greedy / Two Heaps",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_trapping-rain-water-ii",
    title: "Trapping Rain Water II",
    topic: "Heaps",
    subTopic: "BFS + Min-Heap",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/trapping-rain-water-ii/",
    explanationLink: "https://www.geeksforgeeks.org/trapping-rain-water-ii/",
    isLastMoment: false,
    pattern: "BFS + Min-Heap",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_141",
    title: "Linked List Cycle",
    topic: "Linked Lists",
    subTopic: "Fast/Slow Pointers",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/linked-list-cycle/",
    explanationLink: "https://neetcode.io/solutions/linked-list-cycle",
    isLastMoment: true,
    pattern: "Fast / Slow Pointers",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_160",
    title: "Intersection of Two Linked Lists",
    topic: "Linked Lists",
    subTopic: "Two Pointers / Linked List Traversal",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/intersection-of-two-linked-lists/",
    explanationLink:
      "https://neetcode.io/solutions/intersection-of-two-linked-lists",
    isLastMoment: true,
    pattern: "Two Pointers / Linked List Traversal",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_206",
    title: "Reverse Linked List",
    topic: "Linked Lists",
    subTopic: "Iterative / Recursive",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/reverse-linked-list/",
    explanationLink: "https://neetcode.io/solutions/reverse-linked-list",
    isLastMoment: true,
    pattern: "Linked List Traversal / Recursion",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_21",
    title: "Merge Two Sorted Lists",
    topic: "Linked Lists",
    subTopic: "Iterative / Recursive",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/merge-two-sorted-lists/",
    explanationLink: "https://neetcode.io/solutions/merge-two-sorted-lists",
    isLastMoment: true,
    pattern: "Two Pointers / Recursion",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_234",
    title: "Palindrome Linked List",
    topic: "Linked Lists",
    subTopic: "Fast/Slow Pointers, Reverse List",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/palindrome-linked-list/",
    explanationLink: "https://neetcode.io/solutions/palindrome-linked-list",
    isLastMoment: false,
    pattern: "Two Pointers / Reverse Linked List",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_237",
    title: "Delete Node in a Linked List",
    topic: "Linked Lists",
    subTopic: "O(1) deletion",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/delete-node-in-a-linked-list/",
    explanationLink:
      "https://www.geeksforgeeks.org/delete-a-node-in-a-linked-list-without-head-pointer/",
    isLastMoment: true,
    pattern: "O deletion",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_middle-of-the-linked-list",
    title: "Middle of the Linked List",
    topic: "Linked Lists",
    subTopic: "Fast/Slow Pointers",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/middle-of-the-linked-list/",
    explanationLink:
      "https://www.geeksforgeeks.org/find-middle-of-given-linked-list/",
    isLastMoment: true,
    pattern: "Fast / Slow Pointers",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_138",
    title: "Copy List with Random Pointer",
    topic: "Linked Lists",
    subTopic: "Hash Map / In-place",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/copy-list-with-random-pointer/",
    explanationLink:
      "https://neetcode.io/solutions/copy-list-with-random-pointer",
    isLastMoment: false,
    pattern: "Hash Map / Linked List Manipulation",
    sources: ["NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_142",
    title: "Linked List Cycle II",
    topic: "Linked Lists",
    subTopic: "Find Cycle Start",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/linked-list-cycle-ii/",
    explanationLink: "https://neetcode.io/solutions/linked-list-cycle-ii",
    isLastMoment: true,
    pattern: "Find Cycle Start",
    sources: ["Last Moment 79", "Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_143",
    title: "Reorder List",
    topic: "Linked Lists",
    subTopic: "Two Pointers / Linked List Manipulation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/reorder-list/",
    explanationLink: "https://neetcode.io/solutions/reorder-list",
    isLastMoment: true,
    pattern: "Find Middle -> Reverse -> Merge Lists",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_19",
    title: "Remove Nth Node From End of List",
    topic: "Linked Lists",
    subTopic: "Two Pointers",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
    explanationLink:
      "https://neetcode.io/solutions/remove-nth-node-from-end-of-list",
    isLastMoment: true,
    pattern: "Two Pointers",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_2",
    title: "Add Two Numbers",
    topic: "Linked Lists",
    subTopic: "Simulation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/add-two-numbers/",
    explanationLink: "https://neetcode.io/solutions/add-two-numbers",
    isLastMoment: false,
    pattern: "Simulation",
    sources: ["NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_add-two-numbers-ii",
    title: "Add Two Numbers II",
    topic: "Linked Lists",
    subTopic: "Stack",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/add-two-numbers-ii/",
    explanationLink:
      "https://www.geeksforgeeks.org/add-two-numbers-represented-by-linked-lists-set-2/",
    isLastMoment: true,
    pattern: "Stack / Linked List Manipulation",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_flatten-a-multilevel-doubly-linked-list",
    title: "Flatten a Multilevel Doubly Linked List",
    topic: "Linked Lists",
    subTopic: "Doubly Linked List / DFS",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/",
    explanationLink:
      "https://www.geeksforgeeks.org/flatten-a-multilevel-doubly-linked-list-in-place/",
    isLastMoment: false,
    pattern: "Doubly Linked List / DFS",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_remove-duplicates-from-sorted-list-ii",
    title: "Remove Duplicates from Sorted List II",
    topic: "Linked Lists",
    subTopic: "Dummy Node",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/",
    explanationLink:
      "https://www.geeksforgeeks.org/remove-duplicates-from-a-sorted-linked-list-that-leave-distinct-values/",
    isLastMoment: true,
    pattern: "Dummy Node",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_rotate-list",
    title: "Rotate List",
    topic: "Linked Lists",
    subTopic: "Linked List Manipulation / Two Pointers",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/rotate-list/",
    explanationLink: "https://www.geeksforgeeks.org/rotate-a-linked-list/",
    isLastMoment: true,
    pattern: "Linked List Manipulation / Two Pointers",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_flattening-a-linked-list",
    title: "Flattening a Linked List",
    topic: "Linked Lists",
    subTopic: "Recursion / Merge K Sorted Lists concept",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/flattening-a-linked-list/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Linked List / Recursion / Merge",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_25",
    title: "Reverse Nodes in k-Group",
    topic: "Linked Lists",
    subTopic: "Linked List Reversal / Iteration",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/reverse-nodes-in-k-group/",
    explanationLink: "https://neetcode.io/solutions/reverse-nodes-in-k-group",
    isLastMoment: true,
    pattern: "Linked List Manipulation / Recursion",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "cses_1617",
    title: "Bit Strings",
    topic: "Math & Number Theory",
    subTopic: "Combinatorics / Powers of 2",
    difficulty: "Easy",
    problemLink: "https://cses.fi/problemset/task/1617",
    explanationLink:
      "https://usaco.guide/problems/cses-1617-bit-strings/solution",
    isLastMoment: true,
    pattern: "Combinatorics",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_c-program-to-find-gcd-or-hcf-of-two-numbers",
    title: "GCD",
    topic: "Math & Number Theory",
    subTopic: "Euclidean Algorithm",
    difficulty: "Easy",
    problemLink:
      "https://www.geeksforgeeks.org/c-program-to-find-gcd-or-hcf-of-two-numbers/",
    explanationLink:
      "https://www.geeksforgeeks.org/euclidean-algorithms-basic-and-extended/",
    isLastMoment: true,
    pattern: "Euclidean Algorithm",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_202",
    title: "Happy Number",
    topic: "Math & Number Theory",
    subTopic: "Cycle Detection - Fast/Slow Pointers",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/happy-number/",
    explanationLink: "https://www.geeksforgeeks.org/happy-number/",
    isLastMoment: true,
    pattern: "Cycle Detection - Fast / Slow Pointers",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_204",
    title: "Count Primes",
    topic: "Math & Number Theory",
    subTopic: "Sieve of Eratosthenes",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/count-primes/",
    explanationLink: "https://www.geeksforgeeks.org/sieve-of-eratosthenes/",
    isLastMoment: true,
    pattern: "Sieve of Eratosthenes",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_326",
    title: "Power of Three",
    topic: "Math & Number Theory",
    subTopic: "Logarithm / Iteration",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/power-of-three/",
    explanationLink:
      "https://www.geeksforgeeks.org/program-check-number-power-three/",
    isLastMoment: false,
    pattern: "Logarithm / Iteration",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_fizz-buzz",
    title: "Fizz Buzz",
    topic: "Math & Number Theory",
    subTopic: "Basic Conditional",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/fizz-buzz/",
    explanationLink: "https://www.geeksforgeeks.org/fizz-buzz/",
    isLastMoment: true,
    pattern: "Basic Conditional",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_sqrtx",
    title: "Sqrt(x)",
    topic: "Math & Number Theory",
    subTopic: "Binary Search",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/sqrtx/",
    explanationLink: "https://neetcode.io/solutions/sqrtx",
    isLastMoment: false,
    pattern: "Binary Search",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1095",
    title: "Exponentiation",
    topic: "Math & Number Theory",
    subTopic: "Modular exponentiation",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1095",
    explanationLink: "https://usaco.guide/problems/cses-1095",
    isLastMoment: true,
    pattern: "Modular exponentiation",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1742",
    title: "Exponentiation II",
    topic: "Math & Number Theory",
    subTopic: "Modular exponentiation with large exponent",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1742",
    explanationLink: "https://usaco.guide/problems/cses-1742",
    isLastMoment: false,
    pattern: "Modular exponentiation with large exponent",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1747",
    title: "Least Common Multiple",
    topic: "Math & Number Theory",
    subTopic: "LCM",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1747",
    explanationLink: "https://usaco.guide/problems/cses-1747",
    isLastMoment: true,
    pattern: "LCM",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_50",
    title: "Pow(x, n)",
    topic: "Math & Number Theory",
    subTopic: "Binary Exponentiation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/powx-n/",
    explanationLink: "https://neetcode.io/solutions/powx-n",
    isLastMoment: true,
    pattern: "Binary Exponentiation",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_detect-capital",
    title: "Detect Capital",
    topic: "Math & Number Theory",
    subTopic: "String Parsing",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/detect-capital/",
    explanationLink: "https://www.geeksforgeeks.org/detect-capital/",
    isLastMoment: false,
    pattern: "String Parsing",
    sources: ["GFG SDE Sheet", "Love Babbar 450", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_factorial-trailing-zeroes",
    title: "Factorial Trailing Zeroes",
    topic: "Math & Number Theory",
    subTopic: "Number Theory (Counting Factors)",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/factorial-trailing-zeroes/",
    explanationLink:
      "https://www.geeksforgeeks.org/count-trailing-zeros-factorial-given-number/",
    isLastMoment: true,
    pattern: "Math",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_fraction-to-recurring-decimal",
    title: "Fraction to Recurring Decimal",
    topic: "Math & Number Theory",
    subTopic: "Simulation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/fraction-to-recurring-decimal/",
    explanationLink:
      "https://www.geeksforgeeks.org/convert-fraction-repeating-decimal/",
    isLastMoment: false,
    pattern: "Simulation",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_prison-cells-after-n-days",
    title: "Prison Cells After N Days",
    topic: "Math & Number Theory",
    subTopic: "Cycle Detection",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/prison-cells-after-n-days/",
    explanationLink: "https://www.geeksforgeeks.org/prison-cells-after-n-days/",
    isLastMoment: true,
    pattern: "Cycle Detection",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_ugly-number-ii",
    title: "Ugly Number II",
    topic: "Math & Number Theory",
    subTopic: "DP / Heap",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/ugly-number-ii/",
    explanationLink: "https://www.geeksforgeeks.org/ugly-numbers/",
    isLastMoment: true,
    pattern: "DP / Heap",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1079",
    title: "Binomial Coefficients",
    topic: "Math & Number Theory",
    subTopic: "Modular Inverse + Combinatorics",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1079",
    explanationLink: "https://usaco.guide/problems/cses-1079",
    isLastMoment: true,
    pattern: "Modular Inverse + Combinatorics",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1645",
    title: "Prime Multiples",
    topic: "Math & Number Theory",
    subTopic: "Inclusion-Exclusion",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1645",
    explanationLink: "https://usaco.guide/problems/cses-1645",
    isLastMoment: true,
    pattern: "Inclusion-Exclusion",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1682",
    title: "Flight Routes Check",
    topic: "Math & Number Theory",
    subTopic: "Game Theory - XOR",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1682",
    explanationLink:
      "https://usaco.guide/problems/cses-1682-flight-routes-check/solution",
    isLastMoment: false,
    pattern: "Game Theory - XOR",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1685",
    title: "Planet Queries I",
    topic: "Math & Number Theory",
    subTopic: "Game Theory - MEX + Grundy numbers",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1685",
    explanationLink:
      "https://usaco.guide/problems/cses-1685-planet-queries-i/solution",
    isLastMoment: false,
    pattern: "Game Theory - MEX + Grundy numbers",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1729",
    title: "Divisor Analysis",
    topic: "Math & Number Theory",
    subTopic: "Number Theory properties",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1729",
    explanationLink: "https://usaco.guide/problems/cses-1729",
    isLastMoment: true,
    pattern: "Number Theory properties",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1730",
    title: "Sum of Divisors",
    topic: "Math & Number Theory",
    subTopic: "Number Theory properties",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1730",
    explanationLink: "https://usaco.guide/problems/cses-1730",
    isLastMoment: false,
    pattern: "Number Theory properties",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2162",
    title: "Josephus Problem I",
    topic: "Math & Number Theory",
    subTopic: "Simulation / Linked List",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/2162",
    explanationLink: "https://usaco.guide/problems/cses-2162",
    isLastMoment: false,
    pattern: "Simulation / Linked List",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_2163",
    title: "Josephus Problem II",
    topic: "Math & Number Theory",
    subTopic: "Fenwick Tree / Ordered Set",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/2163",
    explanationLink: "https://usaco.guide/problems/cses-2163",
    isLastMoment: false,
    pattern: "Fenwick Tree / Ordered Set",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_273",
    title: "Integer to English Words",
    topic: "Math & Number Theory",
    subTopic: "String Conversion / Math",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/integer-to-english-words/",
    explanationLink: "https://neetcode.io/solutions/integer-to-english-words",
    isLastMoment: false,
    pattern: "Simulation",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_493",
    title: "Reverse Pairs",
    topic: "Sorting & Searching",
    subTopic: "Fenwick Tree / Merge Sort) - Also in Arrays/Sorting",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/reverse-pairs/",
    explanationLink: "https://www.geeksforgeeks.org/count-reverse-pairs/",
    isLastMoment: true,
    pattern: "Fenwick Tree / Merge Sort / Counting Inversions",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
      "Striver CP Sheet",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_count-distinct-elements-in-every-window-of-size-k",
    title: "Distinct numbers in Window.",
    topic: "Sliding Window",
    subTopic: "Sliding Window / Hashing",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/count-distinct-elements-in-every-window-of-size-k/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Sliding Window / Hash Map",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_find-all-anagrams-in-a-string",
    title: "Find All Anagrams in a String",
    topic: "Sliding Window",
    subTopic: "Sliding Window + Frequency Map",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/find-all-anagrams-in-a-string/",
    explanationLink:
      "https://neetcode.io/solutions/find-all-anagrams-in-a-string",
    isLastMoment: false,
    pattern: "Sliding Window + Frequency Map",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_fruit-into-baskets",
    title: "Fruit Into Baskets",
    topic: "Sliding Window",
    subTopic: "Sliding Window",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/fruit-into-baskets/",
    explanationLink: "https://www.geeksforgeeks.org/fruit-into-baskets/",
    isLastMoment: true,
    pattern: "Sliding Window",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_number-of-subarrays-with-bounded-maximum",
    title: "Number of Subarrays with Bounded Maximum",
    topic: "Sliding Window",
    subTopic: "Sliding Window + Counting",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/",
    explanationLink:
      "https://www.geeksforgeeks.org/number-subarrays-bounded-maximum/",
    isLastMoment: false,
    pattern: "Sliding Window + Counting",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_subarray-product-less-than-k",
    title: "Subarray Product Less Than K",
    topic: "Sliding Window",
    subTopic: "Sliding Window",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/subarray-product-less-than-k/",
    explanationLink:
      "https://www.geeksforgeeks.org/count-of-subarrays-having-product-less-than-k/",
    isLastMoment: true,
    pattern: "Sliding Window",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1076",
    title: "Sliding Median",
    topic: "Sliding Window",
    subTopic: "Sliding Window + Two Heaps / Ordered Set",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1076",
    explanationLink:
      "https://usaco.guide/problems/cses-1076-sliding-median/solution",
    isLastMoment: false,
    pattern: "Sliding Window / Two Heaps / Policy Based Data Structure",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1077",
    title: "Sliding Cost",
    topic: "Sliding Window",
    subTopic: "Sliding Window + Two Heaps / Ordered Set",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1077",
    explanationLink:
      "https://usaco.guide/problems/cses-1077-sliding-cost/solution",
    isLastMoment: false,
    pattern: "Sliding Window / Two Heaps / Policy Based Data Structure",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_minimum-window-subsequence",
    title: "Minimum Window Subsequence",
    topic: "Sliding Window",
    subTopic: "Sliding Window / DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/minimum-window-subsequence/",
    explanationLink:
      "https://www.geeksforgeeks.org/minimum-window-subsequence/",
    isLastMoment: false,
    pattern: "Sliding Window / DP",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1621",
    title: "Distinct Numbers",
    topic: "Sorting & Searching",
    subTopic: "Sorting / Set",
    difficulty: "Easy",
    problemLink: "https://cses.fi/problemset/task/1621",
    explanationLink: "https://usaco.guide/problems/cses-1621",
    isLastMoment: true,
    pattern: "Sorting / Set",
    sources: [
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_binary-search",
    title: "Binary Search",
    topic: "Sorting & Searching",
    subTopic: "Implementation - Iterative / Recursive",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/binary-search/",
    explanationLink: "https://neetcode.io/solutions/binary-search",
    isLastMoment: true,
    pattern: "Implementation - Iterative / Recursive",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_first-bad-version",
    title: "First Bad Version",
    topic: "Sorting & Searching",
    subTopic: "Binary Search variation",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/first-bad-version/",
    explanationLink: "https://neetcode.io/solutions/first-bad-version",
    isLastMoment: false,
    pattern: "Binary Search variation",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_valid-perfect-square",
    title: "Valid Perfect Square",
    topic: "Sorting & Searching",
    subTopic: "Binary Search",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/valid-perfect-square/",
    explanationLink:
      "https://www.geeksforgeeks.org/check-if-a-given-number-is-perfect-square/",
    isLastMoment: true,
    pattern: "Binary Search",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_find-nth-root-of-a-number",
    title: "Find Nth root of a number",
    topic: "Sorting & Searching",
    subTopic: "Binary Search",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/find-nth-root-of-a-number/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Binary Search / Math",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_240",
    title: "Search a 2D Matrix II",
    topic: "Sorting & Searching",
    subTopic: "Two Pointers from corner",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/search-a-2d-matrix-ii/",
    explanationLink:
      "https://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/",
    isLastMoment: true,
    pattern: "Two Pointers from corner",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_74",
    title: "Search a 2D Matrix",
    topic: "Sorting & Searching",
    subTopic: "Binary Search twice / O(N+M) approach",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/search-a-2d-matrix/",
    explanationLink: "https://neetcode.io/solutions/search-a-2d-matrix",
    isLastMoment: true,
    pattern: "Binary Search twice / O approach",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_find-k-closest-elements",
    title: "Find K Closest Elements",
    topic: "Sorting & Searching",
    subTopic: "Sorting / Binary Search + Two Pointers",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/find-k-closest-elements/",
    explanationLink:
      "https://www.geeksforgeeks.org/find-k-closest-elements-to-a-given-value/",
    isLastMoment: false,
    pattern: "Sorting / Binary Search + Two Pointers",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_find-peak-element",
    title: "Find Peak Element",
    topic: "Sorting & Searching",
    subTopic: "Binary Search",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/find-peak-element/",
    explanationLink: "https://neetcode.io/solutions/find-peak-element",
    isLastMoment: false,
    pattern: "Binary Search",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_h-index",
    title: "H-Index",
    topic: "Sorting & Searching",
    subTopic: "Sorting",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/h-index/",
    explanationLink:
      "https://www.geeksforgeeks.org/find-h-index-of-a-scientist-a-programmer/",
    isLastMoment: false,
    pattern: "Sorting",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_aggressive-cows",
    title: "Aggressive Cows",
    topic: "Sorting & Searching",
    subTopic: "Binary Search on Answer",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/aggressive-cows/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Binary Search / Greedy",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_allocate-minimum-number-of-pages",
    title: "Allocate minimum number of pages",
    topic: "Sorting & Searching",
    subTopic: "Binary Search on Answer",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/allocate-minimum-number-of-pages/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Binary Search",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_merge-sort",
    title: "Merge Sort",
    topic: "Sorting & Searching",
    subTopic: "Implementation",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/merge-sort/",
    explanationLink: "https://www.geeksforgeeks.org/merge-sort/",
    isLastMoment: true,
    pattern: "Implementation",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_quick-sort",
    title: "Quick Sort",
    topic: "Sorting & Searching",
    subTopic: "Implementation",
    difficulty: "Hard",
    problemLink: "https://www.geeksforgeeks.org/quick-sort/",
    explanationLink: "https://www.geeksforgeeks.org/quick-sort/",
    isLastMoment: true,
    pattern: "Implementation",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_queue-set-1-introduction-and-array-implementation",
    title: "Implement Queue using Arrays",
    topic: "Stacks & Queues",
    subTopic: "Array Implementation (Circular Queue)",
    difficulty: "Easy",
    problemLink:
      "https://www.geeksforgeeks.org/queue-set-1-introduction-and-array-implementation/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Data Structure Design",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_stack-data-structure-introduction-and-implementation",
    title: "Implement Stack using Arrays",
    topic: "Stacks & Queues",
    subTopic: "Array Implementation",
    difficulty: "Easy",
    problemLink:
      "https://www.geeksforgeeks.org/stack-data-structure-introduction-and-implementation/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Data Structure Design",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_155",
    title: "Min Stack",
    topic: "Stacks & Queues",
    subTopic: "Design",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/min-stack/",
    explanationLink: "https://neetcode.io/solutions/min-stack",
    isLastMoment: true,
    pattern: "Design",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_20",
    title: "Valid Parentheses",
    topic: "Stacks & Queues",
    subTopic: "Stack",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/valid-parentheses/",
    explanationLink: "https://neetcode.io/solutions/valid-parentheses",
    isLastMoment: true,
    pattern: "Stack",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_225",
    title: "Implement Stack using Queues",
    topic: "Stacks & Queues",
    subTopic: "Data Structure Design / Queue",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/implement-stack-using-queues/",
    explanationLink:
      "https://www.geeksforgeeks.org/implement-stack-using-queue/",
    isLastMoment: true,
    pattern: "Data Structure Design / Queue",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_232",
    title: "Implement Queue using Stacks",
    topic: "Stacks & Queues",
    subTopic: "Data Structure Design / Stack",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/implement-queue-using-stacks/",
    explanationLink:
      "https://www.geeksforgeeks.org/implement-queue-using-stacks/",
    isLastMoment: true,
    pattern: "Data Structure Design / Stack",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_496",
    title: "Next Greater Element I",
    topic: "Stacks & Queues",
    subTopic: "Stack / Monotonic Stack / Hash Map",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/next-greater-element-i/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Stack / Monotonic Stack / Hash Map",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_next-smaller-element",
    title: "Next Smaller Element",
    topic: "Stacks & Queues",
    subTopic: "Stack / Monotonic Stack",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/next-smaller-element/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Stack / Monotonic Stack",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_sort-a-stack-using-recursion",
    title: "Sort a stack using recursion",
    topic: "Stacks & Queues",
    subTopic: "Recursion / Stack",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/sort-a-stack-using-recursion/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Stack / Recursion",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_150",
    title: "Evaluate Reverse Polish Notation",
    topic: "Stacks & Queues",
    subTopic: "Stack",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/evaluate-reverse-polish-notation/",
    explanationLink:
      "https://neetcode.io/solutions/evaluate-reverse-polish-notation",
    isLastMoment: false,
    pattern: "Stack",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_22",
    title: "Generate Parentheses",
    topic: "Stacks & Queues",
    subTopic: "Backtracking / Iterative with Stack",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/generate-parentheses/",
    explanationLink: "https://neetcode.io/solutions/generate-parentheses",
    isLastMoment: true,
    pattern: "Backtracking / Stack",
    sources: ["Blind 75", "Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_277",
    title: "Find the Celebrity",
    topic: "Stacks & Queues",
    subTopic: "Stack / Two Pointers / Graph Logic",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/find-the-celebrity/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Stack / Two Pointers / Graph",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_394",
    title: "Decode String",
    topic: "Stacks & Queues",
    subTopic: "Stack",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/decode-string/",
    explanationLink:
      "https://www.geeksforgeeks.org/decode-string-recursively-encoded-count-followed-substring/",
    isLastMoment: true,
    pattern: "Stack",
    sources: ["GFG SDE Sheet", "Last Moment 79", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_739",
    title: "Daily Temperatures",
    topic: "Stacks & Queues",
    subTopic: "Stack",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/daily-temperatures/",
    explanationLink: "https://neetcode.io/solutions/daily-temperatures",
    isLastMoment: true,
    pattern: "Stack",
    sources: ["Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_901",
    title: "Online Stock Span",
    topic: "Stacks & Queues",
    subTopic: "Stack / Monotonic Stack / Design",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/online-stock-span/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Stack / Monotonic Stack / Design",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_asteroid-collision",
    title: "Asteroid Collision",
    topic: "Stacks & Queues",
    subTopic: "Stack",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/asteroid-collision/",
    explanationLink: "https://www.geeksforgeeks.org/asteroid-collision/",
    isLastMoment: false,
    pattern: "Stack",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_basic-calculator-ii",
    title: "Basic Calculator II",
    topic: "Stacks & Queues",
    subTopic: "Stack + Parser",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/basic-calculator-ii/",
    explanationLink: "https://www.geeksforgeeks.org/basic-calculator-ii/",
    isLastMoment: false,
    pattern: "Stack / Parsing",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_car-fleet",
    title: "Car Fleet",
    topic: "Stacks & Queues",
    subTopic: "Sorting + Stack",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/car-fleet/",
    explanationLink: "https://neetcode.io/solutions/car-fleet",
    isLastMoment: false,
    pattern: "Sorting + Stack",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_simplify-path",
    title: "Simplify Path",
    topic: "Stacks & Queues",
    subTopic: "Stack",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/simplify-path/",
    explanationLink: "https://www.geeksforgeeks.org/simplify-directory-path/",
    isLastMoment: false,
    pattern: "Stack",
    sources: ["GFG SDE Sheet", "Love Babbar 450", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_find-the-maximum-of-minimums-of-every-window-size-in-an-arra",
    title: "Find the maximum of minimums of every window size",
    topic: "Stacks & Queues",
    subTopic: "Stack / Next Smaller/Greater Element",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/find-the-maximum-of-minimums-of-every-window-size-in-an-array/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Stack / Monotonic Stack",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_239",
    title: "Sliding Window Maximum",
    topic: "Stacks & Queues",
    subTopic: "Deque",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/sliding-window-maximum/",
    explanationLink: "https://neetcode.io/solutions/sliding-window-maximum",
    isLastMoment: true,
    pattern: "Deque",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_basic-calculator",
    title: "Basic Calculator",
    topic: "Stacks & Queues",
    subTopic: "Stack + Parser",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/basic-calculator/",
    explanationLink: "https://neetcode.io/solutions/basic-calculator",
    isLastMoment: false,
    pattern: "Stack / Parsing",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_125",
    title: "Valid Palindrome",
    topic: "Strings",
    subTopic: "Two Pointers",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/valid-palindrome/",
    explanationLink: "https://neetcode.io/solutions/valid-palindrome",
    isLastMoment: true,
    pattern: "Two Pointers",
    sources: ["Blind 75", "Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_13",
    title: "Roman to Integer",
    topic: "Strings",
    subTopic: "String Parsing / Hash Map",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/roman-to-integer/",
    explanationLink:
      "https://www.geeksforgeeks.org/convert-roman-numerals-to-integer/",
    isLastMoment: false,
    pattern: "String Parsing / Hash Map",
    sources: [
      "GFG SDE Sheet",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_14",
    title: "Longest Common Prefix",
    topic: "Strings",
    subTopic: "String Comparison",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/longest-common-prefix/",
    explanationLink:
      "https://www.geeksforgeeks.org/longest-common-prefix-using-word-by-word-matching/",
    isLastMoment: true,
    pattern: "String Comparison",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_242",
    title: "Valid Anagram",
    topic: "Strings",
    subTopic: "Sorting / Hash Map",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/valid-anagram/",
    explanationLink: "https://neetcode.io/solutions/valid-anagram",
    isLastMoment: true,
    pattern: "Sorting / Hash Map",
    sources: ["Last Moment 79", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_28",
    title: "Find the Index of the First Occurrence in a String",
    topic: "Strings",
    subTopic: "String Matching (Naive, KMP, Rabin-Karp)",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/",
    explanationLink:
      "https://neetcode.io/solutions/find-the-index-of-the-first-occurrence-in-a-string",
    isLastMoment: false,
    pattern: "String Matching / KMP / Rabin-Karp",
    sources: [],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_344",
    title: "Reverse String",
    topic: "Strings",
    subTopic: "Two Pointers",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/reverse-string/",
    explanationLink:
      "https://www.geeksforgeeks.org/reverse-a-string-in-c-using-recursion/",
    isLastMoment: true,
    pattern: "Two Pointers",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_387",
    title: "First Unique Character in a String",
    topic: "Strings",
    subTopic: "Hash Map",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/first-unique-character-in-a-string/",
    explanationLink:
      "https://www.geeksforgeeks.org/find-the-first-non-repeating-character-in-a-string-using-a-single-pass/",
    isLastMoment: true,
    pattern: "Hash Map",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_kmp-algorithm-for-pattern-searching-set-1-introduction-and-l",
    title: "KMP algo / LPS(pi) array",
    topic: "Strings",
    subTopic: "String Matching / Pattern Searching",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/kmp-algorithm-for-pattern-searching-set-1-introduction-and-lps-array/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "String Matching / KMP",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_rabin-karp-algorithm-string-matching",
    title: "Rabin Karp",
    topic: "Strings",
    subTopic: "String Matching / Hashing",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/rabin-karp-algorithm-string-matching/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "String Matching / Hashing",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_12",
    title: "Integer to Roman",
    topic: "Strings",
    subTopic: "Greedy / Mapping",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/integer-to-roman/",
    explanationLink: "https://www.geeksforgeeks.org/convert-integer-to-roman/",
    isLastMoment: false,
    pattern: "Greedy / Mapping",
    sources: ["GFG SDE Sheet", "Love Babbar 450", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_165",
    title: "Compare version numbers",
    topic: "Strings",
    subTopic: "String Parsing / Simulation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/compare-version-numbers/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "String Parsing / Simulation",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_3",
    title: "Longest Substring Without Repeating Characters",
    topic: "Slinding Window",
    subTopic: "Sliding Window + Hash Map",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
    explanationLink:
      "https://neetcode.io/solutions/longest-substring-without-repeating-characters",
    isLastMoment: true,
    pattern: "Sliding Window + Hash Map",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_38",
    title: "Count and say",
    topic: "Strings",
    subTopic: "String Simulation / Recursion",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/count-and-say/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "String Simulation / Recursion",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_424",
    title: "Longest Repeating Character Replacement",
    topic: "Sliding Window",
    subTopic: "Sliding Window",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/longest-repeating-character-replacement/",
    explanationLink:
      "https://neetcode.io/solutions/longest-repeating-character-replacement",
    isLastMoment: false,
    pattern: "Sliding Window",
    sources: ["NeetCode 150", "Blind 75"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_49",
    title: "Group Anagrams",
    topic: "Strings",
    subTopic: "Hash Map of sorted string/char counts",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/group-anagrams/",
    explanationLink: "https://neetcode.io/solutions/group-anagrams",
    isLastMoment: false,
    pattern: "Hash Map / Sorting",
    sources: ["Blind 75", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_5",
    title: "Longest Palindromic Substring",
    topic: "Strings",
    subTopic: "Expand Around Center / DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/longest-palindromic-substring/",
    explanationLink:
      "https://neetcode.io/solutions/longest-palindromic-substring",
    isLastMoment: true,
    pattern: "Expand Around Center / Dynamic Programming",
    sources: [
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
      "Blind 75",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_567",
    title: "Permutation in String",
    topic: "Sliding Window",
    subTopic: "Sliding Window + Frequency Map",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/permutation-in-string/",
    explanationLink: "https://neetcode.io/solutions/permutation-in-string",
    isLastMoment: true,
    pattern: "Sliding Window + Frequency Map",
    sources: ["Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_647",
    title: "Palindromic Substrings",
    topic: "Strings",
    subTopic: "Expand Around Center",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/palindromic-substrings/",
    explanationLink: "https://neetcode.io/solutions/palindromic-substrings",
    isLastMoment: true,
    pattern: "Expand Around Center",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
    ],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_8",
    title: "String to Integer (atoi)",
    topic: "Strings",
    subTopic: "Parsing",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/string-to-integer-atoi/",
    explanationLink: "https://www.geeksforgeeks.org/implement-atoi/",
    isLastMoment: false,
    pattern: "Parsing",
    sources: [
      "GFG SDE Sheet",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_encode-and-decode-strings",
    title: "Encode And Decode Strings",
    topic: "NeetCode 150 Placeholder",
    subTopic: "NeetCode 150 Placeholder",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/encode-and-decode-strings/",
    explanationLink: "https://neetcode.io/solutions/encode-and-decode-strings",
    isLastMoment: false,
    pattern: "NeetCode 150 Placeholder",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_valid-sudoku",
    title: "Valid Sudoku",
    topic: "Arrays & Hashing",
    subTopic: "Matrix",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/valid-sudoku/",
    explanationLink: "https://neetcode.io/solutions/valid-sudoku",
    isLastMoment: false,
    pattern: "Matrix Manipulation",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_two-sum-ii-input-array-is-sorted",
    title: "Two Sum Ii Input Array Is Sorted",
    topic: "Two Pointers",
    subTopic: "Array",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",
    explanationLink:
      "https://neetcode.io/solutions/two-sum-ii-input-array-is-sorted",
    isLastMoment: false,
    pattern: "Two Pointers",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_koko-eating-bananas",
    title: "Koko Eating Bananas",
    topic: "Binary Search",
    subTopic: "Search on Answer",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/koko-eating-bananas/",
    explanationLink: "https://neetcode.io/solutions/koko-eating-bananas",
    isLastMoment: false,
    pattern: "Binary Search",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_time-based-key-value-store",
    title: "Time Based Key Value Store",
    topic: "Design",
    subTopic: "Hash Map & Binary Search",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/time-based-key-value-store/",
    explanationLink: "https://neetcode.io/solutions/time-based-key-value-store",
    isLastMoment: false,
    pattern: "Design",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_design-add-and-search-words-data-structure",
    title: "Design Add And Search Words Data Structure",
    topic: "Tries",
    subTopic: "DFS",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/design-add-and-search-words-data-structure/",
    explanationLink:
      "https://neetcode.io/solutions/design-add-and-search-words-data-structure",
    isLastMoment: false,
    pattern: "Trie",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_max-area-of-island",
    title: "Max Area Of Island",
    topic: "Graphs",
    subTopic: "DFS/BFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/max-area-of-island/",
    explanationLink: "https://neetcode.io/solutions/max-area-of-island",
    isLastMoment: false,
    pattern: "DFS/BFS",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_surrounded-regions",
    title: "Surrounded Regions",
    topic: "Graphs",
    subTopic: "DFS/BFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/surrounded-regions/",
    explanationLink: "https://neetcode.io/solutions/surrounded-regions",
    isLastMoment: false,
    pattern: "DFS/BFS",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_course-schedule-ii",
    title: "Course Schedule Ii",
    topic: "Graphs",
    subTopic: "Topological Sort",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/course-schedule-ii/",
    explanationLink: "https://neetcode.io/solutions/course-schedule-ii",
    isLastMoment: false,
    pattern: "Topological Sort",
    sources: ["NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_graph-valid-tree",
    title: "Graph Valid Tree",
    topic: "Graphs",
    subTopic: "Union Find / DFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/graph-valid-tree/",
    explanationLink: "https://neetcode.io/solutions/graph-valid-tree",
    isLastMoment: false,
    pattern: "Union Find",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_word-ladder",
    title: "Word Ladder",
    topic: "Graphs",
    subTopic: "BFS",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/word-ladder/",
    explanationLink: "https://neetcode.io/solutions/word-ladder",
    isLastMoment: false,
    pattern: "BFS",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_reconstruct-itinerary",
    title: "Reconstruct Itinerary",
    topic: "Graphs",
    subTopic: "DFS / Hierholzer's Algorithm",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/reconstruct-itinerary/",
    explanationLink: "https://neetcode.io/solutions/reconstruct-itinerary",
    isLastMoment: false,
    pattern: "DFS",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_coin-change-ii",
    title: "Coin Change Ii",
    topic: "Dynamic Programming",
    subTopic: "Unbounded Knapsack",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/coin-change-ii/",
    explanationLink: "https://neetcode.io/solutions/coin-change-ii",
    isLastMoment: false,
    pattern: "DP",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_interleaving-string",
    title: "Interleaving String",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/interleaving-string/",
    explanationLink: "https://neetcode.io/solutions/interleaving-string",
    isLastMoment: false,
    pattern: "DP",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_longest-increasing-path-in-a-matrix",
    title: "Longest Increasing Path In A Matrix",
    topic: "Dynamic Programming",
    subTopic: "DFS + Memoization",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/",
    explanationLink:
      "https://neetcode.io/solutions/longest-increasing-path-in-a-matrix",
    isLastMoment: false,
    pattern: "DP / DFS",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_distinct-subsequences",
    title: "Distinct Subsequences",
    topic: "Dynamic Programming",
    subTopic: "2D DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/distinct-subsequences/",
    explanationLink: "https://neetcode.io/solutions/distinct-subsequences",
    isLastMoment: false,
    pattern: "DP",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_merge-triplets-to-form-target-triplet",
    title: "Merge Triplets To Form Target Triplet",
    topic: "Greedy",
    subTopic: "Array",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/merge-triplets-to-form-target-triplet/",
    explanationLink:
      "https://neetcode.io/solutions/merge-triplets-to-form-target-triplet",
    isLastMoment: false,
    pattern: "Greedy",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_valid-parenthesis-string",
    title: "Valid Parenthesis String",
    topic: "Greedy",
    subTopic: "Stack / DP",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/valid-parenthesis-string/",
    explanationLink: "https://neetcode.io/solutions/valid-parenthesis-string",
    isLastMoment: false,
    pattern: "Greedy / DP",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_insert-interval",
    title: "Insert Interval",
    topic: "Intervals",
    subTopic: "Array",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/insert-interval/",
    explanationLink: "https://neetcode.io/solutions/insert-interval",
    isLastMoment: false,
    pattern: "Intervals",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_meeting-rooms",
    title: "Meeting Rooms",
    topic: "Intervals",
    subTopic: "Sorting",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/meeting-rooms/",
    explanationLink: "https://neetcode.io/solutions/meeting-rooms",
    isLastMoment: false,
    pattern: "Intervals",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_meeting-rooms-ii",
    title: "Meeting Rooms Ii",
    topic: "Intervals",
    subTopic: "Heap / Sorting",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/meeting-rooms-ii/",
    explanationLink: "https://neetcode.io/solutions/meeting-rooms-ii",
    isLastMoment: false,
    pattern: "Intervals / Heap",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_minimum-interval-to-include-each-query",
    title: "Minimum Interval To Include Each Query",
    topic: "Intervals",
    subTopic: "Heap / Sorting / Sweep Line",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/minimum-interval-to-include-each-query/",
    explanationLink:
      "https://neetcode.io/solutions/minimum-interval-to-include-each-query",
    isLastMoment: false,
    pattern: "Intervals / Heap",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_multiply-strings",
    title: "Multiply Strings",
    topic: "Math & Number Theory",
    subTopic: "String Manipulation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/multiply-strings/",
    explanationLink: "https://neetcode.io/solutions/multiply-strings",
    isLastMoment: false,
    pattern: "Math / String",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_detect-squares",
    title: "Detect Squares",
    topic: "Math & Number Theory",
    subTopic: "Geometry / Hashing",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/detect-squares/",
    explanationLink: "https://neetcode.io/solutions/detect-squares",
    isLastMoment: false,
    pattern: "Hashing / Geometry",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_reverse-integer",
    title: "Reverse Integer",
    topic: "Math & Number Theory",
    subTopic: "Integer Manipulation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/reverse-integer/",
    explanationLink: "https://neetcode.io/solutions/reverse-integer",
    isLastMoment: false,
    pattern: "Math",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_reverse-words-in-a-string",
    title: "Reverse Words in a String",
    topic: "Strings",
    subTopic: "Two Pointers / String Manipulation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/reverse-words-in-a-string/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "String Manipulation / Two Pointers",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "cses_1731",
    title: "Word Combinations",
    topic: "Strings",
    subTopic: "DP + Trie",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1731",
    explanationLink: "https://usaco.guide/problems/cses-1731",
    isLastMoment: false,
    pattern: "DP + Trie",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1753",
    title: "String Matching",
    topic: "Strings",
    subTopic: "KMP Algorithm",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1753",
    explanationLink: "https://usaco.guide/problems/cses-1753",
    isLastMoment: true,
    pattern: "KMP Algorithm",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_minimum-characters-to-be-inserted-at-front-to-make-string-pa",
    title:
      "Minimum characters needed to be inserted in the beginning to make it palindromic",
    topic: "Strings",
    subTopic: "KMP / String Hashing / Two Pointers",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/minimum-characters-to-be-inserted-at-front-to-make-string-palindrome/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "KMP / String Hashing / Palindrome",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_z-algorithm-linear-time-pattern-searching-algorithm",
    title: "Z-Function",
    topic: "Strings",
    subTopic: "String Matching / Pattern Searching",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/z-algorithm-linear-time-pattern-searching-algorithm/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "String Matching Algorithm",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_1392",
    title: "Longest Happy Prefix",
    topic: "Strings",
    subTopic: "KMP - Pi function",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/longest-happy-prefix/",
    explanationLink: "https://www.geeksforgeeks.org/longest-happy-prefix/",
    isLastMoment: false,
    pattern: "KMP - Pi function",
    sources: ["CSES Problem Set", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_44",
    title: "Wildcard Matching",
    topic: "Strings",
    subTopic: "DP / Greedy",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/wildcard-matching/",
    explanationLink: "https://neetcode.io/solutions/wildcard-matching",
    isLastMoment: true,
    pattern: "Dynamic Programming / Greedy",
    sources: ["GFG SDE Sheet", "Last Moment 79", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_76",
    title: "Minimum Window Substring",
    topic: "Sliding Window",
    subTopic: "Sliding Window + Frequency Map",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/minimum-window-substring/",
    explanationLink: "https://neetcode.io/solutions/minimum-window-substring",
    isLastMoment: true,
    pattern: "Sliding Window / Hash Map",
    sources: ["Blind 75", "Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_count-different-palindromic-subsequences",
    title: "Count Different Palindromic Subsequences",
    topic: "Strings",
    subTopic: "Dynamic Programming",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/count-different-palindromic-subsequences/",
    explanationLink:
      "https://www.geeksforgeeks.org/count-palindromic-subsequences-of-a-string/",
    isLastMoment: false,
    pattern: "Dynamic Programming",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_regular-expression-matching",
    title: "Regular Expression Matching",
    topic: "Strings",
    subTopic: "DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/regular-expression-matching/",
    explanationLink:
      "https://neetcode.io/solutions/regular-expression-matching",
    isLastMoment: true,
    pattern: "DP",
    sources: ["Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_shortest-palindrome",
    title: "Shortest Palindrome",
    topic: "Strings",
    subTopic: "KMP / String Hashing",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/shortest-palindrome/",
    explanationLink:
      "https://www.geeksforgeeks.org/minimum-characters-to-be-added-at-front-to-make-string-palindrome/",
    isLastMoment: false,
    pattern: "KMP / String Hashing",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_text-justification",
    title: "Text Justification",
    topic: "Strings",
    subTopic: "Simulation / Greedy",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/text-justification/",
    explanationLink:
      "https://www.geeksforgeeks.org/text-justification-in-a-text-editor/",
    isLastMoment: false,
    pattern: "Simulation / Greedy",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_100",
    title: "Same Tree",
    topic: "Trees",
    subTopic: "Recursion",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/same-tree/",
    explanationLink: "https://neetcode.io/solutions/same-tree",
    isLastMoment: false,
    pattern: "Recursion",
    sources: ["Blind 75", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_101",
    title: "Symmetric Binary Tree",
    topic: "Trees",
    subTopic: "DFS / Recursion (Mirror check)",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/symmetric-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "DFS / Recursion / Tree Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_102",
    title: "Binary Tree Level Order Traversal",
    topic: "Trees",
    subTopic: "BFS",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/binary-tree-level-order-traversal/",
    explanationLink:
      "https://neetcode.io/solutions/binary-tree-level-order-traversal",
    isLastMoment: true,
    pattern: "BFS",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_104",
    title: "Maximum Depth of Binary Tree",
    topic: "Trees",
    subTopic: "DFS / BFS",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/maximum-depth-of-binary-tree/",
    explanationLink:
      "https://neetcode.io/solutions/maximum-depth-of-binary-tree",
    isLastMoment: true,
    pattern: "DFS / BFS",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_110",
    title: "Balanced Binary Tree",
    topic: "Trees",
    subTopic: "DFS",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/balanced-binary-tree/",
    explanationLink: "https://neetcode.io/solutions/balanced-binary-tree",
    isLastMoment: false,
    pattern: "DFS",
    sources: ["Blind 75", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_111",
    title: "Minimum Depth of Binary Tree",
    topic: "Trees",
    subTopic: "BFS",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/minimum-depth-of-binary-tree/",
    explanationLink:
      "https://www.geeksforgeeks.org/minimum-depth-of-a-binary-tree/",
    isLastMoment: true,
    pattern: "BFS",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_144",
    title: "Binary Tree Preorder Traversal",
    topic: "Trees",
    subTopic: "Recursion / Iteration",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/binary-tree-preorder-traversal/",
    explanationLink:
      "https://www.geeksforgeeks.org/tree-traversals-inorder-preorder-and-postorder/",
    isLastMoment: true,
    pattern: "Tree Traversal / Recursion / Stack",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_145",
    title: "Binary Tree Postorder Traversal",
    topic: "Trees",
    subTopic: "Recursion / Iteration",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/binary-tree-postorder-traversal/",
    explanationLink:
      "https://www.geeksforgeeks.org/tree-traversals-inorder-preorder-and-postorder/",
    isLastMoment: true,
    pattern: "Tree Traversal / Recursion / Stack",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_226",
    title: "Invert Binary Tree",
    topic: "Trees",
    subTopic: "Recursion / Iteration",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/invert-binary-tree/",
    explanationLink: "https://neetcode.io/solutions/invert-binary-tree",
    isLastMoment: true,
    pattern: "Recursion / Tree Traversal",
    sources: ["Blind 75", "Last Moment 79", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_235",
    title: "Lowest Common Ancestor of a Binary Search Tree",
    topic: "Trees",
    subTopic: "Iteration / Recursion",
    difficulty: "Easy",
    problemLink:
      "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",
    explanationLink:
      "https://neetcode.io/solutions/lowest-common-ancestor-of-a-binary-search-tree",
    isLastMoment: false,
    pattern: "BST / Recursion / Tree Traversal",
    sources: ["Blind 75", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_543",
    title: "Diameter of Binary Tree",
    topic: "Trees",
    subTopic: "Tree Traversal (DFS with Height)",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/diameter-of-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / DFS",
    sources: ["Striver SDE Sheet", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_572",
    title: "Subtree of Another Tree",
    topic: "Trees",
    subTopic: "Recursion + Tree Traversal",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/subtree-of-another-tree/",
    explanationLink: "https://neetcode.io/solutions/subtree-of-another-tree",
    isLastMoment: false,
    pattern: "Recursion / Tree Traversal",
    sources: ["Blind 75", "NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_94",
    title: "Binary Tree Inorder Traversal",
    topic: "Trees",
    subTopic: "Recursion / Iteration",
    difficulty: "Easy",
    problemLink: "https://leetcode.com/problems/binary-tree-inorder-traversal/",
    explanationLink:
      "https://www.geeksforgeeks.org/tree-traversals-inorder-preorder-and-postorder/",
    isLastMoment: true,
    pattern: "Tree Traversal / Recursion / Stack",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "cses_1131",
    title: "Tree Diameter",
    topic: "Trees",
    subTopic: "Two BFS/DFS traversals",
    difficulty: "Medium",
    problemLink: "https://cses.fi/problemset/task/1131",
    explanationLink: "https://usaco.guide/problems/cses-1131",
    isLastMoment: true,
    pattern: "BFS / DFS / Tree Traversal",
    sources: [
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_bottom-view-binary-tree",
    title: "Bottom View of Binary Tree",
    topic: "Trees",
    subTopic: "Tree Traversal (Level Order with Horizontal Distance)",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/bottom-view-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / BFS / Hashing",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_check-for-children-sum-property-in-a-binary-tree",
    title: "Check for Children Sum Property",
    topic: "Trees",
    subTopic: "Tree Traversal (Recursive/Iterative)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/check-for-children-sum-property-in-a-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / Recursion",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_convert-a-given-binary-tree-to-doubly-linked-list-set-4",
    title: "Binary Tree to Double Linked List",
    topic: "Trees",
    subTopic: "Inorder Traversal / Tree to List Conversion",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/convert-a-given-binary-tree-to-doubly-linked-list-set-4/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / Linked List Manipulation",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_iterative-preorder-postorder-inorder-traversal-binary-tree",
    title: "Preorder inorder postorder in a single traversal",
    topic: "Trees",
    subTopic: "Tree Traversal (Iterative with Stack)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/iterative-preorder-postorder-inorder-traversal-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / Stack",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_morris-inorder-traversal-of-a-binary-tree-without-using-recu",
    title: "Morris Inorder Traversal",
    topic: "Trees",
    subTopic: "Tree Traversal (Space Optimized)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/morris-inorder-traversal-of-a-binary-tree-without-using-recursion-stack-and-without-hashing/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / Morris Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_morris-traversal-for-preorder-traversal",
    title: "Morris Preorder Traversal",
    topic: "Trees",
    subTopic: "Tree Traversal (Space Optimized)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/morris-traversal-for-preorder-traversal/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / Morris Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_print-left-view-binary-tree",
    title: "LeftView Of Binary Tree",
    topic: "Trees",
    subTopic: "Tree Traversal (DFS/BFS)",
    difficulty: "Medium",
    problemLink: "https://www.geeksforgeeks.org/print-left-view-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / DFS / BFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_print-nodes-top-view-binary-tree",
    title: "Top View of Binary Tree",
    topic: "Trees",
    subTopic: "Tree Traversal (Level Order with Horizontal Distance)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/print-nodes-top-view-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / BFS / Hashing",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_print-path-root-given-node-binary-tree",
    title: "Root to Node Path in Binary Tree",
    topic: "Trees",
    subTopic: "Tree Traversal (DFS)",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/print-path-root-given-node-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / DFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_103",
    title: "Binary Tree Zigzag Level Order Traversal",
    topic: "Trees",
    subTopic: "BFS",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/",
    explanationLink:
      "https://neetcode.io/solutions/binary-tree-zigzag-level-order-traversal",
    isLastMoment: false,
    pattern: "BFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_105",
    title: "Construct Binary Tree from Preorder and Inorder Traversal",
    topic: "Trees",
    subTopic: "Recursion",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",
    explanationLink:
      "https://neetcode.io/solutions/construct-binary-tree-from-preorder-and-inorder-traversal",
    isLastMoment: false,
    pattern: "Recursion",
    sources: ["NeetCode 150", "Striver SDE Sheet", "Blind 75"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_106",
    title: "Construct Binary Tree from Inorder and Postorder Traversal",
    topic: "Trees",
    subTopic: "Recursion",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/",
    explanationLink:
      "https://neetcode.io/solutions/construct-binary-tree-from-inorder-and-postorder-traversal",
    isLastMoment: true,
    pattern: "Recursion",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_112",
    title: "Path Sum",
    topic: "Trees",
    subTopic: "DFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/path-sum/",
    explanationLink:
      "https://www.geeksforgeeks.org/root-to-leaf-path-sum-equal-to-a-given-number/",
    isLastMoment: true,
    pattern: "DFS",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_113",
    title: "Path Sum II",
    topic: "Trees",
    subTopic: "DFS with path tracking",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/path-sum-ii/",
    explanationLink:
      "https://www.geeksforgeeks.org/given-a-binary-tree-print-all-root-to-leaf-paths-with-sum-equal-to-k/",
    isLastMoment: true,
    pattern: "DFS with path tracking",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_114",
    title: "Flatten Binary Tree to Linked List",
    topic: "Trees",
    subTopic: "Tree Traversal / In-place",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/",
    explanationLink:
      "https://neetcode.io/solutions/flatten-binary-tree-to-linked-list",
    isLastMoment: true,
    pattern: "Tree Traversal / Linked List Manipulation",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_116",
    title: "Populating Next Right Pointers in Each Node",
    topic: "Trees",
    subTopic: "Level Order / Specific Iteration",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/",
    explanationLink:
      "https://neetcode.io/solutions/populating-next-right-pointers-in-each-node",
    isLastMoment: true,
    pattern: "BFS / Tree Traversal",
    sources: [
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_1448",
    title: "Count Good Nodes in Binary Tree",
    topic: "Trees",
    subTopic: "DFS with max tracking",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/count-good-nodes-in-binary-tree/",
    explanationLink:
      "https://neetcode.io/solutions/count-good-nodes-in-binary-tree",
    isLastMoment: false,
    pattern: "DFS with max tracking",
    sources: ["GFG SDE Sheet", "NeetCode 150", "Striver A2Z"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_199",
    title: "Binary Tree Right Side View",
    topic: "Trees",
    subTopic: "BFS / DFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/binary-tree-right-side-view/",
    explanationLink:
      "https://neetcode.io/solutions/binary-tree-right-side-view",
    isLastMoment: false,
    pattern: "BFS / DFS",
    sources: ["NeetCode 150"],
    isNeetCode150: true,
    isStriverSDESheet: false,
  },
  {
    id: "lc_230",
    title: "Kth Smallest Element in a BST",
    topic: "Trees",
    subTopic: "Inorder Traversal / Iterative Inorder",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/kth-smallest-element-in-a-bst/",
    explanationLink:
      "https://neetcode.io/solutions/kth-smallest-element-in-a-bst",
    isLastMoment: false,
    pattern: "Inorder Traversal / BST",
    sources: ["Blind 75", "NeetCode 150", "Striver SDE Sheet"],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_236",
    title: "LCA in Binary Tree",
    topic: "Trees",
    subTopic: "DFS / Recursion / Path finding",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "DFS / Recursion / Tree Traversal",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_662",
    title: "Max width of a Binary Tree",
    topic: "Trees",
    subTopic: "Tree Traversal (Level Order with Indexing)",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/maximum-width-of-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / BFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_98",
    title: "Validate Binary Search Tree",
    topic: "Trees",
    subTopic: "Recursion with bounds",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/validate-binary-search-tree/",
    explanationLink:
      "https://neetcode.io/solutions/validate-binary-search-tree",
    isLastMoment: true,
    pattern: "Recursion with bounds",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_boundary-of-binary-tree",
    title: "Boundary Traversal of Binary Tree",
    topic: "Trees",
    subTopic: "Tree Traversal (DFS/BFS variants)",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/boundary-of-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / DFS / BFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_find-duplicate-subtrees",
    title: "Find Duplicate Subtrees",
    topic: "Trees",
    subTopic: "Serialization + Hash Map",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/find-duplicate-subtrees/",
    explanationLink: "https://www.geeksforgeeks.org/find-duplicate-subtrees/",
    isLastMoment: false,
    pattern: "Serialization + Hash Map",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_path-sum-iii",
    title: "Path Sum III",
    topic: "Trees",
    subTopic: "DFS with path tracking + Hash Map",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/path-sum-iii/",
    explanationLink:
      "https://www.geeksforgeeks.org/count-paths-given-sum-binary-tree/",
    isLastMoment: true,
    pattern: "DFS with path tracking + Hash Map",
    sources: ["GFG SDE Sheet", "Last Moment 79", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_sum-root-to-leaf-numbers",
    title: "Sum Root to Leaf Numbers",
    topic: "Trees",
    subTopic: "DFS",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/sum-root-to-leaf-numbers/",
    explanationLink: "https://www.geeksforgeeks.org/sum-root-to-leaf-numbers/",
    isLastMoment: false,
    pattern: "DFS",
    sources: ["GFG SDE Sheet", "Love Babbar 450", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1132",
    title: "Tree Distances I",
    topic: "Trees",
    subTopic: "Two BFS/DFS traversals",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1132",
    explanationLink: "https://usaco.guide/problems/cses-1132",
    isLastMoment: true,
    pattern: "BFS / DFS / Tree Traversal",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1133",
    title: "Tree Distances II",
    topic: "Trees",
    subTopic: "Rerooting DP",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1133",
    explanationLink: "https://usaco.guide/problems/cses-1133",
    isLastMoment: false,
    pattern: "Rerooting DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1137",
    title: "Subtree Queries",
    topic: "Trees",
    subTopic: "Segment Tree on Flattened Tree",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1137",
    explanationLink: "https://usaco.guide/problems/cses-1137",
    isLastMoment: false,
    pattern: "Segment Tree on Flattened Tree",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "cses_1138",
    title: "Path Queries",
    topic: "Trees",
    subTopic: "Fenwick Tree / Segment Tree on Flattened Tree",
    difficulty: "Hard",
    problemLink: "https://cses.fi/problemset/task/1138",
    explanationLink: "https://usaco.guide/problems/cses-1138",
    isLastMoment: false,
    pattern: "Fenwick Tree / Segment Tree on Flattened Tree",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_124",
    title: "Binary Tree Maximum Path Sum",
    topic: "Trees",
    subTopic: "DFS",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/binary-tree-maximum-path-sum/",
    explanationLink:
      "https://neetcode.io/solutions/binary-tree-maximum-path-sum",
    isLastMoment: true,
    pattern: "DFS",
    sources: [
      "Blind 75",
      "Last Moment 79",
      "NeetCode 150",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_297",
    title: "Serialize and Deserialize Binary Tree",
    topic: "Trees",
    subTopic: "Tree Traversal / BFS/DFS",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/",
    explanationLink:
      "https://neetcode.io/solutions/serialize-and-deserialize-binary-tree",
    isLastMoment: true,
    pattern: "Tree Traversal / BFS / DFS / String Manipulation",
    sources: [
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_binary-tree-cameras",
    title: "Binary Tree Cameras",
    topic: "Trees",
    subTopic: "Greedy",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/binary-tree-cameras/",
    explanationLink:
      "https://www.geeksforgeeks.org/minimum-cameras-in-a-binary-tree/",
    isLastMoment: false,
    pattern: "Greedy",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_convert-binary-search-tree-to-sorted-doubly-linked-list",
    title: "Convert Binary Search Tree to Sorted Doubly Linked List",
    topic: "Trees",
    subTopic: "Inorder Traversal",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/",
    explanationLink:
      "https://www.geeksforgeeks.org/convert-given-binary-tree-doubly-linked-list-set-3-circular-doubly-linked-list/",
    isLastMoment: false,
    pattern: "Inorder Traversal",
    sources: ["GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_vertical-order-traversal-of-a-binary-tree",
    title: "Vertical order traversal",
    topic: "Trees",
    subTopic: "Tree Traversal (Level Order with Horizontal Distance and Level)",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Tree Traversal / BFS / Hashing / Sorting",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_count-distinct-substrings-string-using-suffix-trie",
    title: "Number of Distinct Substrings in a String",
    topic: "Tries",
    subTopic: "Trie / String Processing / Suffix Trie",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/count-distinct-substrings-string-using-suffix-trie/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Trie / String / Suffix Trie",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "gfg_longest-word-with-all-its-prefixes",
    title: "Longest String with All Prefixes",
    topic: "Tries",
    subTopic: "Trie / DFS",
    difficulty: "Medium",
    problemLink:
      "https://www.geeksforgeeks.org/longest-word-with-all-its-prefixes/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Trie / DFS",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_208",
    title: "Implement Trie (Prefix Tree)",
    topic: "Tries",
    subTopic: "Trie Implementation",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/implement-trie-prefix-tree/",
    explanationLink: "https://neetcode.io/solutions/implement-trie-prefix-tree",
    isLastMoment: true,
    pattern: "Trie",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Love Babbar 450",
      "NeetCode 150",
      "Striver A2Z",
      "Striver CP Sheet",
      "Striver SDE Sheet",
    ],
    isNeetCode150: true,
    isStriverSDESheet: true,
  },
  {
    id: "lc_211",
    title: "Add and Search Word - Data structure design",
    topic: "Tries",
    subTopic: "Trie + DFS",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/add-and-search-word-data-structure-design/",
    explanationLink:
      "https://neetcode.io/solutions/add-and-search-word-data-structure-design",
    isLastMoment: true,
    pattern: "Trie + DFS",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "Blind 75",
      "GFG SDE Sheet",
      "Last Moment 79",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_421",
    title: "Maximum XOR of Two Numbers in an Array",
    topic: "Tries",
    subTopic: "Trie (Bitwise)",
    difficulty: "Medium",
    problemLink:
      "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/",
    explanationLink:
      "https://neetcode.io/solutions/maximum-xor-of-two-numbers-in-an-array",
    isLastMoment: true,
    pattern: "Trie",
    sources: ["Last Moment 79", "Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_longest-word-in-dictionary",
    title: "Longest Word in Dictionary",
    topic: "Tries",
    subTopic: "Trie / Sorting",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/longest-word-in-dictionary/",
    explanationLink:
      "https://www.geeksforgeeks.org/longest-word-dictionary-trie/",
    isLastMoment: false,
    pattern: "Trie",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_map-sum-pairs",
    title: "Map Sum Pairs",
    topic: "Tries",
    subTopic: "Trie",
    difficulty: "Medium",
    problemLink: "https://leetcode.com/problems/map-sum-pairs/",
    explanationLink: "https://www.geeksforgeeks.org/map-sum-pairs/",
    isLastMoment: false,
    pattern: "Trie",
    sources: ["AlgoMaster.io DSA Patterns", "GFG SDE Sheet", "Striver A2Z"],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "gfg_aho-corasick-algorithm-for-pattern-searching",
    title:
      "Pattern Matching (Aho-Corasick - Advanced string algorithm, uses Trie ideas)",
    topic: "Tries",
    subTopic: "Aho-Corasick - Advanced string algorithm",
    difficulty: "Hard",
    problemLink:
      "https://www.geeksforgeeks.org/aho-corasick-algorithm-for-pattern-searching/",
    explanationLink:
      "https://www.geeksforgeeks.org/aho-corasick-algorithm-for-pattern-searching/",
    isLastMoment: false,
    pattern: "Aho-Corasick - Advanced string algorithm / Uses Trie ideas",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "CSES Problem Set",
      "GFG SDE Sheet",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
  {
    id: "lc_1707",
    title: "Maximum XOR With an Element From Array",
    topic: "Tries",
    subTopic: "Trie (Bitwise) / Query Processing",
    difficulty: "Hard",
    problemLink:
      "https://leetcode.com/problems/maximum-xor-with-an-element-from-array/",
    explanationLink: "",
    isLastMoment: false,
    pattern: "Trie / Bit Manipulation",
    sources: ["Striver SDE Sheet"],
    isNeetCode150: false,
    isStriverSDESheet: true,
  },
  {
    id: "lc_concatenated-words",
    title: "Concatenated Words",
    topic: "Tries",
    subTopic: "Trie + DP",
    difficulty: "Hard",
    problemLink: "https://leetcode.com/problems/concatenated-words/",
    explanationLink: "https://www.geeksforgeeks.org/concatenated-words/",
    isLastMoment: false,
    pattern: "Trie + DP",
    sources: [
      "AlgoMaster.io DSA Patterns",
      "GFG SDE Sheet",
      "Striver A2Z",
      "Striver CP Sheet",
    ],
    isNeetCode150: false,
    isStriverSDESheet: false,
  },
];

export const dsaData = preprocessDsaData(rawDsaData);
